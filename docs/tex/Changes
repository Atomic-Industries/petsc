


  This is list of recent PETSc changes before they are 
transported into the docs/changes.html file. (Because it
is a pain to always check that file out of SourceSafe to 
add to it).

  VEC

   The command line names for changing the vector type in VecCreate()
   are now -vec_type mpi or -vec_type shared rather than -vec_mpi or -vec_shared
   Also extended VecCreate() by allowing registration of new vector types
   with VecRegister() see the manual pages

   Changed the VecType variable type from an enum type to a string

   Changed the calling sequence for VecGetType(), see the manual page.

   Added VecCreateWithType() that allows you to indicate the vector type
   in the function call (in addition to setting it from the options database)

   If the option VEC_IGNORE_OFF_PROC_ENTRIES is used the VecAssemblyBegin()
   and End() will not cause any parallel communication or synchronization
   (previously it still did a barrier in VecAssemblyBegin()).

   Added  VIEWER_FORMAT_ASCII_INDEX which causes 
   the index for each vector entry to be printed with the vector values

   Added two new vector scatter options; -vecscatter_merge and -vecscatter_ssend
   -vecscatter_sendfirst this may improve performance a great deal when using MPICH for MPI
   on ethernet or fast ethernet

   changed VecGhostGetLocalRepresentation() and VecGhostRestoreLocalRepresentation(),
   to VecGhostGetLocalForm() and VecGhostRestoreLocalForm(), the other names had
   too many characters for some machines.

   added VecStrideNorm() and VecStrideScatter(), VecStrideGather()

  MAT

   Added MatSeqAIJSetColumnIndices() and MatSeqBAIJSetColumnIndices().

   If the option MAT_IGNORE_OFF_PROC_ENTRIES is used the MatAssemblyBegin()
    and End() will not cause any parallel communication or synchronization.

   If the option MAT_NO_NEW_NONZERO_LOCATIONS is used, one less collective
   call will be made in the MatAssemblyEnd routines for MPIAIJ and MPIBAIJ.

  KSP

    Added the function KSPSetAvoidNorms() and option -ksp_avoid_norms. For the 
    methods CG, Richardson, Bi-CG-stab, CR, and CGS this eliminates the computation
    of the residual norm at each iteration (which is an expensive, collective 
    operation). Then the convergence criteria depends only on the maximum number
    of iterations you set with KSPSetTolerances(). This is useful when using the 
    Krylov method as a smoother with a fixed, say 3, iterations.

    Changed the calling sequence of KSPComputeEigenvalues(KSP,int,double*,double*,int *neig);
    to return as the final value the number of eigenvalues computed; see the manual
    page for more details.

  PC

    Added PCLUSetReuseReordering() and PCLUSetReuseFill() so that SLES can reuse the 
    reordering and fill information for a new factorization of a slightly different nonzero
    structure matrix from the previous factorization. Command line options -pc_lu_reuse_reordering
    and -pc_lu_reuse_fill

  AO

    AOPetscToApplicationIS() and AOApplicationToPetscIS(), that use to crash
    when passed a stride index set, now handle them correctly.

  IS

    Added ISStrideToGeneral(), converts a stride type index set to a general type

  General

    Add OptionsGetAll().
