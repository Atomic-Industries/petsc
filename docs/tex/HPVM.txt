
   Rob (and Andrew),

    There seems to be a little confusion regarding the C-Fortran 
interface with HPVM, so I suggest we reset our registers and try again.

  * we do not have access to the HPVM source code so cannot recompile
    HPVM to suit our needs.

  * the default calling convention for Microsoft C is cdecl

  * the default calling convention for Digitial Fortran is stdcall

  * these are incompatible with each other


  There are two approaches to fix this 

  1) - compile ALL the Fortran code with the option /iface:(cref,nomixed_str_len_arg)
     - compile ALL the C code in the usual manner (including the C stubs 
        for Fortran)

  or 2) - compile ALL the Fortran code with the default stdcall 
        - compile the C fortran stubs with special information telling the 
          compiler that they will be called from Fortran, stdcall style

  It appears you have chosen Method 2. With PETSc we have chosen Method 1 
because (a) it is easier and (b) we have ~400 C Fortran stubs for which we would have
to generate the "special information" to tell the compiler they are being called
from Fortran stdcall style.

  What we are asking for is either

  1) you provide another version of the HPVM libraries compiled to support 
     Fortran compiled with the option /iface:(cref,nomixed_str_len_arg).
     Which is the most natural when porting from Unix and should be very easy for 
     you.

  2) you give us access to the HPVM source so that we can build the libraries
     with the option /iface:(cref,nomixed_str_len_arg). We'll, of course, give
     back to you the material to build the alternative version.

  We are not experts in Microsoft tools, so our analysis of the situation may
not be completely correct, but we had the same experience with WPVM and when they 
gave us alternative 1) PETSc C/Fortran code compiled and ran fine.

  Barry and Satish


         

******** rusty to rob ***********************************************
Rob (and Andrew), 

    Here is a description of a problem that Satish Balay ran into when trying
to install PETSc on your cluster.  It is not exactly a "bug", but rather a
"thought-provoking serious-user experience" that you might want to consider.

Regards,
Rusty


------- Forwarded Message

Date: Thu, 17 Sep 1998 11:25:19 -0500 (CDT)
From: Satish Balay <balay@mcs.anl.gov>
To: Rusty Lusk <lusk@mcs.anl.gov>
Subject: HPVM

Rusty,

        The following is the description of the problem in
        using HPVM from PETSc. Could you forwared it over
        to the hpvm developers and also cc to Barry?

Thanks,
Satish
- -------------------------------------------------------------------
Problem:

Cannot use HPVM fortran interface from PETSc fortran programs
because PETSc does not use the default fortran calling
convention on NT machines.

Explanation:
- ----------
Z:\balay\hpvm\sockets\lib>nm -o mpi.lib |grep -i mpi_comm_rank | grep " T "
mpi.lib:comm_rankf.obj:00000000 T _MPI_COMM_RANK@12
mpi.lib:comm_rank.obj:00000000 T _MPI_Comm_rank

Z:\balay\hpvm\sockets\lib>
- ---------
>From the above, you can see that the names in the fortran-interface
are mangled differently compared to the c-interface.

This name mangling is determined by the calling convention used. The
calling convention is the method/s used when a function is called.
i.e it determined the way the caller function passes arguments to the
callee function, who cleans up the stack after the call is completed
etc.

The default calling convention used by the C compiler on NT is 'cdecl'
and the default for fortran is 'stdcall'

To be able to call c functions from fortran, the Visual studio
document recommends adding bunch of compiler directives either on the
c-side of the code, or on the fortran side of the code.  My guess is
that the HPVM fortran interface is created with compiler directives in
the fortran-interface stubs, to handle the 'stdcall' calling
convention correctly.

The problem with this approach, is, you would need fortran interface
stubs, which are very different from the fortran stubs that work
on any unix machine.

The alternative approach we used for the PETSc fortran interface is to
use 'cdecl' calling convention for both the C, and fortran code, thus
we use the same stubs to provide the fortran interface on NT.

- ---------------
C:\petsc\lib\libg\nt>nm -o *.lib | grep -i petscinit | grep " T "
libpetscfortran.lib:zstart.obj:0000053a T _PETSCINITIALIZE
libpetscsys.lib:pinit.obj:0000052e T _PetscInitialize
- ---------------

To do this, the fortran program is compiled using the compiler options
'/iface:(cref,nomixed_str_len_arg)'

And when these options are used, we cannot use the HPVM-MPI's fortran
interface.

One way to fix this is, have HPVM also provide the fortran interface
generated from unix-fortran-interface source files, which works with
fortran codes compiled with the above options. My guess is, this will
also be useful for other users who do mixed language programming on
both NT and unix machines.

If you are aware of a better way to handle this problem, please let
us know.

Thanks,
Satish


******** Rob's reply to Rusty's mail *****************************************
Satish,
 
We've seen this before and one thing that has helped in *some* cases is to 
add /iface:cref to the command line when compiling.  
 
There is one other Fortran code that we are working with (MOPAC) for which
this does 
work completely.  
 
Rob

******** Satish's reply to Rob ********************************************
Rob,
 
Actually this is the option I use to compile fortran code, (along with
another option /iface:nomixed_str_len_arg to handle the fortran
strings in the traditional way) and this option does not work with
HPVM.
 
Also, currently I do not have an account on the Cluster, so I haven't
tried using it yet. I'm using the public distribution of HPVM on a
local NT machine. Does the new/development version of HPVM work with
the /iface:cref option?
 
Thanks,
Satish

******** Rob's reply *******************************************************

Balay,
 
Would you mind trying the experiment of compiling and linking 
with iface:stdref inp lace of iface:cref?  Also, leave the 
iface:no_mixed_str_len_arg in for the compile and let me know
if it compiles and runs correctly.
 
Rob

******** Satish's reply ******************************************************* 
Rob,
 
This does'nt work, as some other sections of this code require
/iface:cref option to compile.
 
It will be really nice if the MPI interface of HPVM has the fortran
stubs which can be linked with code compiled with /iface:cref
/iface:nomixed_str_len_arg options. For now, we are trying to come up
with a version which does not make any calls to MPI from
fortran. Hopefully we should be able to run this version on the
cluster. Also This code requires the patches to the Digital Fortran
compiler, as we use some preorpcessing compiler options which work
only in the patched version of the compiler. We should be able to
try this out once the patches are applied.
 
Thanks,
Satish
 
******************************************************************************
