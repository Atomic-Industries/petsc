

Additional Capabilities that PETSc Needs:

  X - denotes accomplishment!
  * - denotes work in progress

-----------------------------------------------------------------------
Meta priorities: 

  - Change PLOgEventBegin() and end to no longer use the 
    "tacky" stuff since it should be no longer needed, then 
    fix the logging inside snesmfj.c

  - PetscFree(); CHKERRQ(); on IRIX64 ( + manpages)

  - There is no man page for AOCreateDebug() why and fix?

  - add documentation on -ksp_smonitor and -snes_smonitor

  - Convert DACreateXd() to use ISCreateBlock() when block size is bigger then
    1.

  - Add OptionsGetStringArray().

  - Decide what to do about MAT_NEW_NONZERO_ALLOCATION_ERROR; then update
    manpage and Changes file and parallel macros for MatSetValues().

  - Edit snes/examples/tutorials/ex5f90.F  to use MatSetValuesLocal().
    Add routine MatSetLocalToGlobalMappingDA(Mat,DA) to alleviate the 2-step
    process used in ex5f.F.

  - Add nightly testing for ts/examples/tutorials/[ex2.c,ex2f.F]

  - Finish converting ex13.c to sles/exampels/tutorials/ex13f.F (VecPlaceArray)

  - Write section in users manual telling how people may test 
    PETSc solvers for matrices stored in files; see src/mat/examples/tests/ex32.c
    and src/sles/examples/tutorials/ex10.c and talk about partitioning 
    the matrix as well for parallel performance gains.

  - Decide how to handle searches for WWW stuff (edit docs/www/www.html to
    either fix or remove link to searching for basic distribution).

  - Change tutorials examples on web page to use MatSetValuesLocal()

       - Document which routines are not currently supported
          - Done for PCILUSetUseDropTOlerance().
          - What about things like ICC/symmetric matrices?  Should we
            state somewhere that these are currently supported onlythrough BS95 
            but more symmetric stuff is in the works?

 - Fix VecScatterView()

 * Satish - Make sure one can run block Jacobi on several matrices with number of rows
   on all matrices but first zero for both AIJ and BAIJ matrices.


Satish NT stuff

Lois - Add table of all preconditioners and options to PETSc manual.
       Ugh.  Don't feel up to doing this now.  Let's make people run 
       with -help option.


-----------------------------------------------------------------------
 Highest priorities:    To do BEFORE the next release:
-----------------------------------------------------------------------

  - Upgrade sles/examples/tutorials/ex8.c to use a more intersting test problem
    so that ASM experiments are meaningful.  Add ASM experiments to the
    spiffed-up tutorials.

  - Maybe support KSPConvergedTrueResidual(), as requested by Dave Levine.
    Kind of dangerous, because then some people will use it and get inefficient
    performance.

  - Objects need to be able to flush themself of memory that they are not currently
    actively using, so that it may be used by another object. For example the work
    vectors in KSP, or the memory used for storing values in sparse matrices, see
    src/contrib/reuse.

  - Currently no support for MatGetSubMatrices_SeqBDIAG()  MAT_SAME_NON_ZERO_STRUCTURE. (Satish)

  - Make src/sys/src/cputime.c compile and run correctly on all machines.

  - Have PETSc put some header information in front of -log and -log_all files indicating
    how PETSc generated, where and on what code

 - Add support to DA so that Global to Local and Local to Global uninterlaces
   multicomponent vectors.

 - investigate Saad's ILUDT

  - Split files into many files with one routine per file. Try to 
    reduce the amount of irrelevent stuff that is linked into the 
    executable.

  - Spruce up manpages

  - Provide support for user defining a class of their events and
    turning them all off???? Maybe not. Currently PETsc itself does
    this by turning off events one at a time for its own classes.

Barry  * Finite difference approximations of derivatives using coloring

Lois  - Add routine SNESWillNeedJacobian(SNES,SNESJacobianNeeded yes,no,maybe);
    
Satish  - fix PetscView so that with scrolling in horizontal direction and click on icon
    it pops up detailed information in correct location.

Satish  - Aim for more exhaustive PETSc testing.  Use tconv Unix utilities
       Maybe, like, say, test one or two BDiag routines before making a release?
       More test cases that involve, zero size vectors, matrices, IS's etc.

Barry  * get SPAI  http://lovelace.nas.nasa.gov/NAS/SPAI/download.html

  - compile with PETSC_DEBUG turned off and fix all places in code that 
    generate warning messages.

Lois  - Thorougly test PetscRandomSetInterval().


  - Add table to PETSc home page with great flop rates from Euler code,
    take numbers from Scitools96 paper.

  - write SLESCompareTypes() that for a given sles runs all possible PC, KSP, options etc.
    builds giant table.


Satish - Subdivide html manpage sections, e.g. elementary, advanced and developer.

  - Finish converting examples to tutorials/tests formats

  - Suggestion by Carl - provide SNES example showing user computing most
    of Jacobian in function eval routine.


  - Write an example of using MatCreateShell().

  - ILUDT() - made MatILUDTFactor_SeqAIJ() stub.

Satish/Lois * Finish cleaning up petsc/bin/demos.  Incorporate Bill's fixes from SC96
    that are in XXX.  What do we really want here? Nothing that takes much space.


-----------------------------------------------------------------------
  To do sometime soon:
-----------------------------------------------------------------------

 - Provide a way to view suitable options for any PETSc object. I see two ways?
    - may a file viewer option that prints the stuff in XXXPrintHelp()... or
    - add an function in the abstract base class printhelp() just like destroy() and view()

 - Provide tools that help with imposing BCs but retaining matrix symmetry.
   Is this even possible or just academics dreaming in their ivory towers?

 - Fix VRML vector viewer interface; add documentation about VRML.


  - Write preprocessor that zips through all of PETSc finding SETERRQ()
    setting unique error code number and save to big file: error code,
    function name, file, line number and error message.

  - Support y = alpha *y + beta *A *x

  - AVS viewer via MPI, new Matlab viewer via MPI without sockets Matlab viewer

  - Features wanted by Isaac: Add option to set multiple values at once to different
    matrices.

  - change KSP to not return -it on error but instead use error handling.

 - Fix DrawTensorMapMesh(): 
     Currently the mesh viewer does not display the final edge of
     the mesh (i=ni, n=nj, k=nk). In my old version of code, I
     overcame this with a hack to draw enclosed polygons for all
     sections of the mesh, but really this would be needed just for
     the final edge.

  - Use MPI topology routines for DA codes.

  - Add VecCreateWithData() and VecCreateXXXWithData().

  - Make a variant of SNES-TR method that doesn't use KSPBuildSolution() in
    the convergence test.  Talk to Jorge about the importance of this test.

  - Add support for stashing ghostvalues at end of local values in array???
    How to do this reasonably? Or is it even possible reasonably or desirable?

 - TS stuff
   - Add verify timestep for all TS styles.
   - Crank-Nicholson
   - Multi-stage explicit methods

  - Consider adding a utility routine that determines the d_nnz, and o_nnz
    for preallocating matrix space for parallel matrices.  Create an empty
    matrix; pass once through a series of MatSetValues() calls; instead of
    adding elements, just get nonzero info.  Then allocate space.

  * Make configure fully functional in PETSc 2.0
      - document usage somewhere
      - needs to handle:  set PETSCFLAGS
         - complex numbers: -DUSES_TEMPLATED_COMPLEX
         - etc.

 * Make all systems use shared libraries if possible, and document how to
           use these variants.

 - Handle PCView_BJacobi, PCView_ASM for the case of multiple blocks with
   potentially different solvers on each
     - Send info to 1 proc, then print from it.

  - Add optional scrolling stackframe window to PetscView    

  * Finish "Performance" chapter: section "System Related Problems"

  - Fix binary I/O for complex numbers.

  - Fix GMRESCycle() so that test for "happy breakdown" is actually
    used.  See petsc-maint message #282 from David.

  * Have all preconditioners (including LU) support null space, see 
            tools.n/solvers/nullsp.c petsc/src/pc/interface/pcnull.c

  * add -mpidump option that lists all unfinished MPI operations at end, 
         including PetscMPIDump()

  * Add diagnotics for memory allocation using PLogInfo (like already done 
    for AIJ format) for all matrix formats if it's not already in place.

  - Add segmented sparse column format for scalar problems, reduces
    the number of loads required? Add otehr optimization that sorts by 
    row length, then loops over rows of each length doing rows unrolled.

  - Chapter in users manual on how PETSc would be used with 
    different types of grid problems. Or different document.

  - ordering with flow direction - made MatReodering_SeqAIJ_Flow() stub.

  - add Flexible GMRES routine

  - cool example using KELP

  - HPF interface

  - interface to Tom Coleman's post-docs Cholesky code

  - Right and left preconditioning for all KSP types.

  - Augment some KSP methods to support symmetric preconditioning; fix relevant
     KSP support routines.

  - Add routine for forming big matrix from a bunch of smaller ones, something 
       like:
        MatSetSubmatrix(Mat large,Mat small,int *rows, int *cols)

  - Write uniprocessor ICC code; possibly also introduce symmetric storage 
    variant.

   - Provide MPIU_MAXSUM and use it to replace use of MAT_SUM + MAT_MAX
     everywhere.

   - Add viewer for matrix graph - possibly interface to external software?
     (requested by Andreas) 

   - Maybe add a routine VecCreateVecs()?  Seems useful to me instead of having
     to create a base vector, then duplicate it.

   ? Add copyright info to header of each file?  See, e.g., MPICH.

   - Examine the SPEC benchmarks to verify that we're using the appropriate
     compiler options for optimized code.  For info:  http://www.specbench.org

   * Make VecScatterCopy_  for the different types of scatters and use 
     a uniform naming scheme.

   - MatExpand() and VecExpand() talk to Paul about how this is done in SUMMA.

   * Add functionality to bjacobi to support block Gauss-Seidel
     including  support for coloring in parallel.

   * Develop basic PETSc benchmark suite

   - Develop additional test problems:
      - Develop utilities to create common matrices and vectors (for testing
        SLES, to serve as templates, and to fulfill basic needs).  
        See  /home/gropp/tools.n/solvers/examples/formsol.c and
        /home/gropp/tools.n/fd/* for ideas.
      - Convert more MINPACK-2 example problems to the PETSc coding style
      - Consider CUTE test suite

   - Redo parts of inline for basic operations and improved performance.

   * Parallel dense matrix implementation.

   - Introduce a concept of Vecs and provide multiple right hand side
     versions of MatMult.... Then do KSP versions.

   - Incorporate SPARSKIT strategy of Saad for managing AIJ data structure.
     (requested by Xiao Chuan Cai; this is supposedly much faster than
     our current code).

   * stride with multicomponent chunks in index sets, also two dimensional
     and three dimensional chunks

   * Develop code to rebalance matrices (and vectors) for better 
     load balance during matrix vector multiplies.

   - SNES suggestion from David Keyes:  Update Clipping
     Update clipping...  I used to think I was neurotic for doing this
     to Newton's method, but now I realize that "just about everyone" does
     it (quietly) when facing problems with bounded feasibility, such as a
     turbulent kinetic energy that cannot be permitted to go negative, or
     a mass fraction that cannot be allowed to exceed one, etc.  Essentially,
     the user would optionally provide bounds on unknowns.  The putative
     Newton correction would then be tested against these bounds.  The
     full update would be scaled back (or optionally some subset of its
     components) to assure feasibility.  This screws up the trust-region
     logic, of course.   It can be thought of us as introducing the most
     elementary form of constraints into the package: decoupled, explicit,
     and linear.


------------------------------------------------------------------------
         Web pages to read and possible software to interface to 
------------------------------------------------------------------------

  - http://www.maths.bath.ac.uk/~mjh/doug/
  - http://www.cis.ohio-state.edu/~white/splc96/
  - http://www.c3.lanl.gov/~dquinlan/A++P++.html
  - http://www-sccm.stanford.edu/~burgess/papers/renumber.ps.gz
  - http://www.cs.colorado.edu/homes/clive/public_html/MPI-RGL.html
  - J. Schobel, Linz, 3d grid generation
  - http://www.csl.sri.com/GLU.html
  - http://nfhsg3.rus.uni-stuttgart.de/projects/ddd
    Klaus Birhen birhan@rus.uni-stuttgart.de
  - http://www.cs.utexas.edu/users/rvdg/plapack
  - http://www.csc.fi/~jmaki/rs2hpm-dist/960605/rs2hpm-2.0-960605-src.tar.Z
     ! Jussi Maki                          ! Email: Jussi.Maki@csc.fi   
     ! Centre for Scientific Computing     ! URL:   http://www.csc.fi/~jmaki 
     ! P.O. Box 405                        ! Voice:     +358-0-457 2747     
     ! FIN-02101 Espoo, Finland            ! Telefax:   +358-0-457 2302     
     +---------------------------------------------------------------------+

-------------------------------------------------------------------------
                            Features for TOHTML
-------------------------------------------------------------------------

   * Fix fact that first line of verbatim in html files have all leading blanks
     removed. (Note our makefile puts in three blanks here which essentially 
     fixes the problem).
    (The verbatim handler for tothml seems not to put a carriage return 
     after the <pre><tt> and before the text. This causes the first line 
     of verbatim text to be printed incorrectly. I think this can be fixed
     by simply putting a \n after the outputed <pre><tt>)

   - allow inputed example files to have PETSc routine names mapped to manpages.

    doesn't handle \& correctly as a & in regular text.

    tothml doesn't handle \cite{} with -mapref../www/petsc.cit
    when the \cite is within an included file. 

    \ge doesn't seem to work correctly

    Also the automatic manpage finder feature invoked by -mapman does not
    seem to be able to handle function names with integers in them like
    DACreate2d()

    In the enumerate environment tothml doesn't seem to be able to handle
   \subitem and \subsubitem. It also seems to put too much blank space
    before and after the enumerate list. 

   An additional feature that would be great for tohtml, especially in
   handling large documents (such as the ever expanding PETSc users
   manual), is the optional addition of buttons for "Contents" and
   "Index" with the usual "up", "next", "previous" buttons.  

   Make \begin{tabular} environments look better. 

   Doesn't use \hline in tables so tables are confusing.

   Citations in tables are messed up. See Table for KSP types.

   Doesn't handle equation, eqnarray* properly.

   Tabing doesn't work well.

-----------------------------------------------------------------------
                Accomplishments!  :) :)
-----------------------------------------------------------------------

  X Add some indication to window indicating that it is awaiting input.

  X Fix FortranInitialization().

  X  add test to PetscCommDup_Private() to verify that all processors
     are using the same tag, when PETSC_BOPT_g is defined.

  X Fix include files for *.f programs (e.g., snes/examples/tests/ex10.f)

  X Provide default color choices for PLogEventRegister() so
    user doesn't have to choose.  Provide documentation on the
    format and available options for colors.

  X Explain profiling, performance tuning in users manual

  X Add to documentation tips on getting parallel performance numbers, 
    including how to prevent the paging in of executable from screwing 
    up timings. sles ex21.c

  X Add -viewer_matlab_machine -viewer_matlab_port 

  X Fix SNES so that calling SNESSolve(), SNESDestroy() (without calling
    SNESSolve() in between) doesn't cause a seg fault.

  X Make ViewerGetFormat() a real public routine (seems good to me); else
    make it obviously private.

  X Fix MPIRowbs so factorization routiens return NEW matrix, NOT the 
    original matrix. Then fix MatMult() etc to make sure one does not
    multiply a factored matrix!!!!!!!!!!!!

  X Add provision so that all -info printouts indicate the associated
    processor.  In particular, storage allocation of submatrices for MATMPIAIJ:
      MatAssemblyEnd_SeqAIJ:Unneeded storage space 351 used 609 rows 60
    What processor is this coming from?

   X Add nonsymmetric matrix reorderings for use in LU (requested by Andreas)

   X When one is using a MatShell it would be nice if PC knew to use no
     preconditioning when no special preconditioner is applied. This would 
     prevent the annouying error message about MatGetDiagonal() when it 
     tries to use the default jacobi preconditioner.

   X Add error checking in SLESSolve(), MatMult(), PCApply(), etc. for the case 
     when input vector == output vector.

   X In-place ILU(0) for AIJ (Done), Row matrix formats (not done, should we?)

   X More nonlinear solvers, including those for unconstrained minimization

   X Make PETSc work using include/mpiuni.h (i.e. no MPI needed)

   X Make it possible to zoom in on viewed matrices.

   X Add iterative refinement or some similar technique to Unmodified 
     Gram-Schmidt code to cheaply stablize.

   X Change mytid and numtid(s) throughout code to rank and size to match
     MPI terms.

   X Upgrade WWW pages, especially installation information.  Use MPICH 
     format as a model.

   X Build new picture clipper for petsc homepage

   X make HTML summary to be pointed to by map.

   X Build wrapper for html manpages

  X Provide routine for initializeing Fortran side of PETSc when 
    main program is C. i.e. this sets common blocks and PETSC_NULL_Fortran

  X Reorganize format of manpages (both Unix and HTML) to display synopsis 
    before keywords and seealso.

  X Find out why snake doesn't count send/receives/wiats properly.
    Simply removed MPi logging from hpux machine.

  X Change default pc_type to ILU for one processor and BJacobi on 
    more then one except blocksolve that default to ILU.

  X Change PCSetUp_BJacobiAIJ() to use MatGetSubMatrices() rather then 
    MatGetSubMatrix() since someone decided MatGetSubMatrix cannot 
    be logged so MPIAIJ format with bjacobi is completely worthless 
    cause we don't have a clue as to how much time is spent getting 
    submatrices.

  X Remove Pipeline and Scatter_up, scatter_down support from the 
    scatter operations? They just make that code more complicated, harder
    to debug and harder to optimize?????

  X Fix PETSc components picture (add new matrices, pcs, etc)

  X Block compressed row storage format implementation.

  X Replace -log_summary data in Part 1 of users manual (to correspond
    with profiling chapter info (ILU/GMRES on 1 proc).

  X Provide a VecGetArray_Quick() for the matrix computational kernels
    and VecRestoreArray_Quick() <- Null macro. This is to save eight function 
    calls for every MatMult() etc. May not be noticable but can't do any harm.

  X Add PetscValidScalarPointer() and PetscValidIntPointer() to all 
    interface files to test that user is passing in correct integer or 
    Scalar pointer that PETSc is to access.

  X Make log summary print name of exceutable it is running

  X Fix -log_summary. Shows incorrect values for multiple satages

  X reorganize nightly builds, using /home/MPI/mpich/maint/runlist
    as an example.

  X Fix PetscSetDisplay so it is always called initially by all
    processors and sets a global static stored, then when called by
    program just returns that.

  X make ViewerPushFormat() ViewerPopFormat() use that to eliminate
    saving of formats in for example MatCreate().

  X Note fixes needed for ICASE SP (poseidon) in petsc/src/sys/src/mtr.c
    and petsc/src/viewer/impls/matlab/send.c

  X Take mention of BLACS and Scalapack from PETSc picture.

  X find LAgesvd_ on Cray T3D. Not supported by libsci.a, therefore
    we generate an error and exit.

  X Fix BDiag factorization to use Barry's new Linpack-modified stuff.
    Also change to actually invert diagonal blocks rather then keeping 
    triangular factors and doing triangular solves on the blocks in 
    each backsolve. As is done in SeqBAIJ.

  X For MatLoad() add support for automatically checking for file 
    filename.info that contains additional information on matrix in 
    unformated ascii. For example blocksize 5 and diagonals

  X Provide etags rule in makefile for public releases (no inclusion of
    *.tex files, etc.)

  X Fix the F*&^ bug that PETSc does not work on Cray T3d with two 
    processors bjacobi preconditioner with ILU(0) on subdomains!!!!!!!!
    For example, arco1

  X fix rules on all machines that do .F files, so they work properly 
    with PETSC_COMPLEX but don't generate warnign messages like
    cpp -I../../.. -I../../../include -I/usr/local/mpi/include  
    -I../../../src -O -D
    PETSC_DEBUG -DPETSC_BOPT_O  somefort.F  > somefort.f
    cpp: Invalid option `-O'
    gmake[1]: [../../../lib/libO_complex/freebsd_nolog/libpetscfortran
    .a(somefort.o)
    ] Error 33 (ignored)
    f77 -c  -O somefort.f

  X Fix F.o rules to pass proper flags; i.e. yes -I flags but maybe not
    -O flags on some machines, for example paragon.
  X fix output formats for -log_summary so that 3-digit numbers (e.g., 100.0) 
    doesn't screw up column alignment

  X update petscopts ( some of the options are outdated  for eg: pc_method )

  X extend PETSc PLogInfo() logging so that individual components can disable
    their printouts (e.g., get SNES logging but not matrix logging)

  X Debugger info? fixed. 

  X Fortran doesn't read aliases from .petscrc

  X Section on ASM in users manual.

  X Make a SNESMonitor() like the KSPMonitor() in kspimpl.h and 
    insure that it is sued everywhere instead of calls to (*snes->monitor)

  X Make -snes_xmonitor stash the DrawLG in SNES and then have it 
    destroyed in SNESDestroy(), like as is done for KSP.


  X Make a -ksp monitor that displays residual and true residual, like 
    the -ksp_bsmonitor. Added -ksp_truemonitor and -ksp_xtruemonitor

  X Test MATMPIROWBS for nonsymmetric matrices by building another 
    set of ARCO matrices by removing small values from them.

  X Change Scalabe ODE solvers to Scalable Time-Steppers

  X Allow users to pass petsc objects between Fortran and C.

  X add filename to petscinitialize for fortran

  X Fix PetscRandomCreate() so that it actually generates random numbers
    for all machines.

  X Fix PetscGetArchType() for Fortran.

  X Make MatGetArray_MPIDense().

  X rs6000_p4 machines:  Fortran programs don't print output when stdout
    is directed to a file (e.g., failure of sles/examples/ex7.F to
    print KSP residual norms in runex7).  Fix this.

  X Performance file: Elaborate on reuse of vectors, et by employing user
    context, use SNES examples for illustrations.

  X Fix PetscView demo log file to work with new profile format.
    Cleanup PetscView.

  X Add parallel viewer for MPIROWBS matrix format.

  X Add inode info to MatView() with info format.

  X Remove default stuff from MatCreate() into each matrix type, including
    processing command line options.

  X But in jump links for WWW manpages seealso.

  X Fix documentation for matrices in manual (also AIJ man pages).  
    Fix help info for matrices. MatPrintHelp().

   X Fix MPIRowbs format so that one can INSERT_VALUES with nonsymmetric matrix.

   X Make MatGetSubMatrices() for Seq and MPI AIJ.

   X Make MatIncreaseOverlap() for Seq and MPI AIJ.

   X Do overlapping additive Schwarz for Seq and MPI AIJ.

   X Fix SNES so that the right-hand-side of the Newton systems is not
     ever scaled by -1.0, but instead this is taken care of in the
     update step, x += alpha * dx   OR   x -= alpha * dx.

   X Complex versions of the Krylov subspace solvers

   X Complex version work from Fortran

   X Have -log_summary print percentages for different stages.

   X don't require user to set diagonal entries in mpirowbs, that is
     insane - says Barry.
   
   X But BlockSolve _requires_ a diagonal entry for each row, even if it is
     zero - says Lois.
     I have changed the MatCreateMPIRowbs() to create an initial matrix that 
     already has zeros on the diagonal so that the user need not set them

   X Allow column and row oriented input for MatSetValues() for all matrix
     types,

   X Increase user-definable events (needed by Tom Canfield).  Maybe now's
     the time to expand base PETSc events as well?

   X Parallel vector to parallel vector scatter.

   X Fix KSPSetGMRESxxx routines:  possibly zap 
     KSPGMRESSetUseUnmodifiedGramSchmidt() in favor of just
     KSPGMRESSetOrthogRoutine().

   X Make symbolic part of ILU(0) out of place fast for SeqAIJ. Just copy data 
     structures.

   X Change all CAPS macro to use _ between words, for example INSERT_VALUES

   X Add flag where user can announce that matrix is structurally symmetric and 
     that they are inserting all values for MPIRowbs, this prevents unneeded 
     communication.

   X Automatic collection of information about the solution process

   X Fortran interface

   X 1d wave equation, heat equation, etc examples with seperate graphics 
      for each processor.
 
   X Develop TK interfaces for options and monitoring 

   X Develop 1 and 3D distributed array code

  X Looks like MatRelax() is broken for shifts != 0??

  X  Use a USES_INT_MPI_COMM for Cray T3d and IRIX64 that use "native"
         MPI. 

 X Change PARCH_IRIX to PARCH_IRIX64 in bamke/IRIX64 and 
           all uses of PARCH_IRIX in the code need also || PARCH_IRIX64

 X Make sure all Fortran examples run for complex on all machines, note
         this means the bmake files must insure that -DPETSC_COMPLEX is 
         properly set.

 X Fix fortran interface for TS. and read David Keyes comments.

 X Remove Unix man pages from next PETSc release. 

 X allow more then one KSP and SNES monitor.

 X Change remotetest to use gzip instead of compress, if it 
    is available on all machines.

 X add -log_trace option, somewhat like -mpitrace stuff.

 X Add MatSetValuesLocal() modeled on VecSetValuesLocal().

 X Have option for MatSetValues() and VecSetValues() to ignore data inserted
    that belongs to other processors.

 NO GOOD  try to set up Fortran error checking with
          forcheck (http://132.229.167.66:80/forcheck/) or 
          ftnchek (http://dv.go.dlr.de:8081/pdinfo_dv/ftnchek.html)
          lintfor (http://www.doc.ic.ac.uk/~mac/manuals/hpux-manual-pages
                   /hpux/usr/man/man1/lintfor.1.html).

  X TEST EXAMPLE LIKE SLES/examples/tests/ex1.c for MATRIX SIZE OF 0!!!!!

  X Add the following to MatSetOption():  MAT_ROWS_UNSORTED, MAT_COLUMNS_UNSORTED
    to enable switching among sorted/unsorted input.

  X fix breakdown error message in KSP BCGS.

  X Change error handling: PetscError() gets two new arguments
      (1) __FUNCTION__ 
      (2) a specific error code; set by script.
    Macro interface SETTERR... do not change. __FUNCTION__ defaults to "unknown"
    In each function in the entire package we need #undef __FUNCTION__ followed
    by #define __FUNCTION__ "functionname" With this, our tracebacks can generate
    function names on each level, we can remove functionname from error message
    and easily manage different languages for each message.

  X Provide support for VIEWER_DRAWX_WORLD from Fortran.

  X Provide support somehow for -mat_view_draw and -vec_view_draw etc.
    to reuse same window for subsequent calls with same matrix or vector.

  X Add VIEWER_STDOUT_(comm) modeled on VIEWER_DRAWX_WORLD() that
    automatically creates viewer for the communicator.

  X Fix this:
    > VecNorm with a NORM_MAX option returns 0 if the
    > vector has NaN's. It seems to me that it should return
    > NaN like the 1 and 2 norms. I guess the problem is that
    > the comparison in the loop of the current max to NaN
    > returns false becuase of the NaN, so the max is not
    > set to NaN.

  X allow more than one TS monitor. Model on KSP.

  X Add feature in nightly builds to remove old libraries (maybe?)
    See maint/removelibs

  X Change MatConvert() and MatLoad() so that all matrix formats are not always loaded.

  X Need to allow repeated matix assembly for repeated linear solves with
    in-place ILU(0). Perhaps new routine MatSetUnfactored(Mat)? 

  X Provide better registration mechanism for PC, KSP, etc (based on
    MatReorderingRegister) to replace the lame procedure described in,
    e.g., PCRegisterAll.  

  X Clarify documentation for MatReorderForNonzeroDiagonal().
    Comment from Jean Utke:
    > It is still not clear to 
    > me whether I can apply the routine for the in place and/or out of place
    > factorization and when I have to call it (before or after the 
    > factorization). 
    > In general I would like to have the manual and the man pages a bit 
    > more specific about whether parameters get changed inside the 
    > routine or not. The routine in question for instance has all 
    > parameter calls by value and not by reference which raises the 
    > question what gets changed at all ... 

  X Allow one to view a reordered matrix, perhaps 
     by providing a MatReOrder(Mat,IS,IS,Mat*)?

  X Consider adding test for NaNs to convegence tests.

  X Cai's versions of ASM

  X Support DA users setting own partition

 X Where does the Fortran interface flag really belong?  Should be more
   readily available to applications codes so that $(CONF) need not be
   use there.

 X Add variant ot MatSetOption(MAT_NO_NEW_NONZERO_LOCATIONS) to print error
   instead of ignoring calls to insert values for which no storage has
   been allocated.

 X Have PETSc error handler print memory used info if error is out of memory
   and trmalloc is used.

 X Make PetscFinalize() check if PetscInitialize() was called and generate
   an error otherwise.

 X Test routine PetscInitializeNans() to work on all machine types.

 X Have PetscFinalize() free linked list of malloced memory in Fortran stubs.

 X Get rid of ksp lib.

 X MatSetValuesBlocked() TEST

 X Inlining MatSetValues_Seq*() in the function MatSetValues_MPI*().
           A prototype is on poseidon:~mcinnes/mpibaij.bak

 X Try debugger on HP (unset the EDITOR environmental variable)
        Document in Troubleshooting and Machines

 X Add SLES example showing multiple linear solves with same matrices but
   difference RHS (sles/examples/tutorials/ex16.c)

 X Add info about help message printout to section 12.1 (version 2.0.15)
   of users manual.

 X Add info about which library components do what.  Mention SLES_LIB.

 X Update figure of PETSc directory structure (add BAIJ (MPI)), etc.

 X make clean copy of emacs stuff for mud to give to all summer visitors, ALICE folks etc.

 X Test mpiuni on DEC alpha, document any changes needed for it to work.

 X     Maybe, like, say, test one or two BDiag routines before making a release?
       More test cases that involve, zero size vectors, matrices, IS's etc.

 X DrawText(), _PC, conflict with definitions in .h files in MS Visual C++. (Satish)

