
Additional Capabilities that PETSc Needs:

  X - denotes accomplishment!
  * - denotes work in progress

 -------------------
 o High priorities:
 -------------------

   To do BEFORE the next release:
  --------------------------------

 (Lois)  - Remove default stuff from MatCreate() into each matrix type, including
           processing command line options.

 (Barry)  - But in jump links for WWW manpages seealso.

 (Barry)  - Have all preconditioners (including LU) support null space, see 
            tools.n/solvers/nullsp.c petsc/src/pc/interface/pcnull.c

 (Bill)   - Make configure fully functional in PETSc 2.0


   - Fix documentation for matrices in manual (also AIJ man pages).  
     Fix help info for matrices. MatPrintHelp().

   - Fix MPIRowbs format so that one can INSERT_VALUES with nonsymmetric matrix.

   - Make MatGetSubMatrices() for Seq and MPI AIJ.

   - Make MatIncreaseOverlap() for Seq and MPI AIJ.

   - Do overlapping additive Schwarz for Seq and MPI AIJ.

 (Lois)   - Complex versions of the Krylov subspace solvers

 (Lois)   - Complex version work from Fortran

   X Have -log_summary print percentages for different stages.

   X Test PETSc with LAM.
    
   X don't require user to set diagonal entries in mpirowbs, that is insane.

   X Allow column and row oriented input for MatSetValues() for all matrix types,

   X Increase user-definable events (needed by Tom Canfield).  Maybe now's
     the time to expand base PETSc events as well?

   X Parallel vector to parallel vector scatter.

   X Fix KSPSetGMRESxxx routines:  possibly zap 
     KSPGMRESSetUseUnmodifiedGramSchmidt() in favor of just
     KSPGMRESSetOrthogRoutine().

   X Make symbolic part of ILU(0) out of place fast for SeqAIJ. Just copy data structures.

   X Change all CAPS macro to use _ between words, for example INSERT_VALUES

   X Add flag where user can announce that matrix is structurally symmetric and 
     that they are inserting all values for MPIRowbs, this prevents unneeded 
     communication.


   Features for TOHTML
   ------------------

   - Fix table of vector operations and matrices in html version of users manual.

   * Fix fact that first line of verbatim in html files have all leading blanks
     removed. (Note our makefile puts in three blanks before ierr which fixes
     90 percent of the problems for manual.html)
    (The verbatim handler for tothml seems not to put a carriage return 
     after the <pre><tt> and before the text. This causes the first line 
     of verbatim text to be printed incorrectly. I think this can be fixed
     by simply putting a \n after the outputed <pre><tt>)

   - allow inputed example files to have PETSc routine names mapped to manpages.

    tothml doesn't handle \cite{} with -mapref../www/petsc.cit
    when the \cite is within an included file. 

    \ge doesn't seem to work correctly

    Also the automatic manpage finder feature invoked by -mapman does not
    seem to be able to handle function names with integers in them like
    DACreate2d()

    In the enumerate environment tothml doesn't seem to be able to handle
   \subitem and \subsubitem. It also seems to put to much blank space
    before and after the enumerate list. 

   An additional feature that would be great for tohtml, especially in
   handling large documents (such as the ever expanding PETSc users
   manual), is the optional addition of buttons for "Contents" and
   "Index" with the usual "up", "next", "previous" buttons.  


   To do sometime soon:
  ----------------------

 (Barry)   - Make VecScatterCopy_  for the different types of scatters and use 
     a uniform naming scheme.

   - MatExpand() and VecExpand() talk to Paul about how this is done in SUMMA.

   - Make PLogFlops() also log loads and stores.


 (Satish)   - Add functionality to bjacobi to support block Gauss-Seidel including 
              support for coloring in parallel.

   - Develop basic PETSc benchmark suite

   - Develop additional test problems:
      - Develop utilities to create common matrices and vectors (for testing
        SLES, to serve as templates, and to fulfill basic needs).  
        See  /home/gropp/tools.n/solvers/examples/formsol.c and
        /home/gropp/tools.n/fd/* for ideas.
      - Convert more MINPACK-2 example problems to the PETSc coding style
      - Consider CUTE test suite

   - Redo parts of inline for basic operations and improved performance.
     Associated with MISF.

 (Lois)   * Parallel dense matrix implementation.

   - Block compressed row storage format implementation.

   - Introduce a concept of Vecs and provide multiple right hand side
     versions of MatMult.... Then do KSP versions.

   - Incorporate SPARSKIT strategy of Saad for managing AIJ data structure.
     (requested by Xiao Chuan Cai; this is supposedly much faster than
     our current code).

   * Improve history (-log_history) logging.

   X In-place ILU(0) for AIJ (Done), Row matrix formats (not done, should we?)

   X More nonlinear solvers, including those for unconstrained minimization

   X Make PETSc work using include/mpiuni.h (i.e. no MPI needed)

   X Make it possible to zoom in on viewed matrices.

   X Add iterative refinement or some similar technique to Unmodified Gram-Schmidt
     code to cheaply stablize.

   X Change mytid and numtid(s) throughout code to rank and size to match MPI terms.

   X Upgrade WWW pages, especially installation information.  Use MPICH 
     format as a model.

   X Build new picture clipper for petsc homepage

   X make HTML summary to be pointed to by map.

   X Build wrapper for html manpages


 -------------------------
 o Lower Priority issues:
 -------------------------

   - Finite difference approximations of derivatives using coloring

   - Implement nested factorization preconditioner?

   - Add matrix reduction plus ILU preconditioner. 

   - stride with multicomponent chunks in index sets, also two dimensional
     and three dimensional chunks

   * Develop code to rebalance matrices (and vectors) for better 
     load balance during matrix vector multiplies.

   - Interface to ScaLAPACK and BLACS

   X Automatic collection of information about the solution process

   X Fortran interface

   X 1d wave equation, heat equation, etc examples with seperate graphics 
      for each processor.
 
   X Develop TK interfaces for options and monitoring 

   X Develop 1 and 3D distributed array code



