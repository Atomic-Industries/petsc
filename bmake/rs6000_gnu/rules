# $Id: base,v 1.25 1998/04/26 00:55:10 balay Exp balay $ 

#
#   If you do not have the XlC compiler then use the xlc compiler below
# we default to xlC since it generates faster code.
#
PARCH    = rs6000
CC       = /usr/local/bin/gcc
#
#  Indicates the version of the compiler you are using; if you do not know
#  how to get the version number then use: unknown
#
CCV      = ${CC} --version
#
FC       = /home/alice/egcs/rs6000/bin/g77 
AR       = ar
RM       = rm -f
RANLIB   = ranlib
OMAKE    = make
SHELL    = /bin/sh
# 
#  Some systems may require instead
# CLINKER = xlc ${COPTFLAGS} -bI:/usr/lpp/xlf/lib/lowsys.exp 
# CLINKER = xlc ${COPTFLAGS}
#  Next line is a hack for IBM SPx, you should remove it if 
# you are running on plain IBM RS6000 workstations and replace 
# with one of the above.
#
CLINKER  = ${CC} -Wl,-bbigtoc ${COPTFLAGS} 
#
# Fortran programs MUST be linked statically (no shared libraries) for them
# to run on systems that haven't licensed a Fortran runtime or compiler.
# This used to be the default, but I've removed it since most system have
# licensed runtimes
#
# FLINKER = xlf 
#  Next line is a hack for IBM SPx, you should remove it if 
# you are running on plain IBM RS6000 workstations and replace 
# with the above.
#
FLINKER = /home/alice/egcs/rs6000/bin/g77 -Wl,-bbigtoc ${FOPTFLAGS}

SHELL   = /bin/sh
SYS_LIB = -lisode

# AIX apparently does not remotely resemble EITHER System V or BSD 4.x.
# By defining _POSIX_SOURCE , there is some hope that it will pretend that
# it is some form of Unix.

include ${PETSC_DIR}/bmake/common

libc:
	 for i in ${OBJSC}; do ${OMAKE} BOPT=${BOPT} libmember LIBMEMBER=$$i ; done

libf:
	for i in ${OBJSF}; do ${OMAKE} BOPT=${BOPT} libmember LIBMEMBER=$$i ; done

libmember:    ${LIBNAME}(${LIBMEMBER})

###########
.F.o:
	-${FC} -c ${FOPTFLAGS} ${FFLAGS} ${CPPFLAGS} $*.F

.F.a: 
	-${FC} -c ${FOPTFLAGS} ${FFLAGS} ${CPPFLAGS} $*.F
	-${AR} cr ${LIBNAME} $*.o
	-${RM} $*.o


