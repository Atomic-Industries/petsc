#
#
#  If you are not using the Gnu C compiler then replace the compiler name 
# gcc with your own and remove the -D__USE_FIXED_PROTOTYPES__.
#
PARCH    = nt_gnu
CC       = gcc -D__USE_FIXED_PROTOTYPES__
#
#  Indicates the version of the compiler you are using; if you do not know
#  how to get the version number then use: unknown
#
CCV      = ${CC} --version
FC       = g77
AR       = ar
RM       = rm -f
OMAKE    = make
RANLIB   = ranlib
SHELL    = /bin/sh
CLINKER  = gcc ${COPTFLAGS}
FLINKER  = g77 ${FOPTFLAGS}
SYS_LIB  = -ladvapi32

include ${PETSC_DIR}/bmake/common

libc: ${OBJSC}
	ar crl ${LIBNAME} ${OBJSC}
libf: ${OBJSF}
	ar crl ${LIBNAME} ${OBJSF}

#############
#
#  .F.f: target is nolonger required, but retained, as it is
#  useful to check what the preprocessor output.
#
.F.f:
	-${RM} __$*.f
	-${CC} -E -traditional-cpp -x c ${CPPFLAGS} ${FFLAGS} ${FCONF} $*.F  > __$*.f
.F.o:
	-${RM} __$*.f
	-${CC} -E -traditional-cpp -x c ${CPPFLAGS} ${FFLAGS} ${FCONF} $*.F  > __$*.f
	-${FC} -c ${FOPTFLAGS} __$*.f -o $*.o
	-${RM} __$*.f

.F.a:
	-${RM} __$*.f
	-${CC} -E -traditional-cpp -x c ${CPPFLAGS} ${FFLAGS} ${FCONF} $*.F  > __$*.f
	-${FC} -c ${FOPTFLAGS} __$*.f -o $*.o
	-${AR} cr ${LIBNAME} $*.o
	-${RM} __$*.f

shared:
