# $Id: base,v 1.65 2000/02/02 22:35:27 bsmith Exp bsmith $ 
#
#     See the file bmake/base_variables.defs for a complete explanation of all these fields
#

include ${PETSC_DIR}/bmake/${PETSC_ARCH}/base_variables
include ${PETSC_DIR}/bmake/common

libc: ${LIBNAME}(${OBJSC})
libf: ${LIBNAME}(${OBJSF})


#############
shared: chkopts_basic
	-@echo making shared libraries in ${LDIR} ;\
	cd ${LDIR}; \
	${RM} -rf tmp; \
	mkdir tmp; \
	cd tmp; \
	for LIBNAME in ${SHLIBS} ; \
	do \
          if [ -f ${LDIR}/$$LIBNAME.a ]; then \
	    flag=""; \
	    if [ -f ${LDIR}/$$LIBNAME.${SLSUFFIX} ]; then \
              flag=`find ${LDIR} -type f -name $$LIBNAME.a -newer ${LDIR}/$$LIBNAME.${SLSUFFIX} -print`; \
	    else \
	      flag="true"; \
	    fi; \
            if [ "$$flag" != "" ]; then \
	      echo "building $$LIBNAME.${SLSUFFIX}"; \
	      ${AR} x ../$$LIBNAME.a ;\
	      ${LD} -G  -h $$LIBNAME.${SLSUFFIX} *.o  -o ../$$LIBNAME.${SLSUFFIX} ; \
	      ${RM} -f * ; \
	    fi; \
          fi; \
	done ;\
	cd ../ ; \
	${RM} -rf tmp
#
#  Generates a shared library from any .a library; not just the PETSc ones
#  This is to allow any user to generate his or her own shared library
#
#  The ${C_SYS_LIB} -lC is too tell the linker the location of the libC.a 
#  library and force it to include those symbols into the shared library.
#  Since there is no .so version of the libC.a it must be done this way.

oshared: 
	-@${RM} -rf tmp; \
	mkdir tmp; \
	ln -s ${LIBNAME}.a tmp/libtmp.a; \
	cd tmp; \
        echo "building ${LIBNAME}.${SLSUFFIX} with ${NEEDED_A_LIBS} ${C_SYS_LIB} "; \
	${AR} x libtmp.a ;\
	${LD} -G  -h ${LIBNAME}.${SLSUFFIX} *.o  -o libtmp.${SLSUFFIX} \
               ${NEEDED_A_LIBS} ${C_SYS_LIB} ; \
	cd ../ ; \
	mv tmp/libtmp.${SLSUFFIX} ${LIBNAME}.${SLSUFFIX} ;\
	${RM} -rf tmp

