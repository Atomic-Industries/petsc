# $Id: base,v 1.5 1998/12/06 17:30:02 balay Exp bsmith $ 
#
#     See the file .... for a complete explanation of all these fields
#
AR               = ar
RM               = rm -f
OMAKE            = make
RANLIB           = true
SHELL            = /bin/sh
# ######################### C and Fortran compiler ########################
#
C_CC             = cc    -KPIC -dalign -xtarget=native
C_FC             = f90 -xpp=cpp
C_CLINKER        = cc    ${COPTFLAGS} -R${LDIR}:${DYLIBPATH}
C_FLINKER        = f90   ${FOPTFLAGS} -R${LDIR}:${DYLIBPATH}
C_CCV            = cc    -V -c
C_SYS_LIB        = -L/opt/SUNWspro/SC4.2/lib -lF77 -lM77 -lsunmath -lnsl -lsocket -lgen -ldl 
# ---------------------------- BOPT=g options ----------------------------
G_COPTFLAGS      = -g -xs
G_FOPTFLAGS      = -g -xs
# ----------------------------- BOPT=O options -----------------------------
O_COPTFLAGS      = -fast -xO4  -fsimple=2 -xtarget=native
O_FOPTFLAGS      = -fast
# ########################## C++ compiler ##################################
#
CXX_CC           = CC    -KPIC
CXX_FC           = f90   -xpp=cpp
CXX_CLINKER      = CC    ${COPTFLAGS} -R${LDIR}:${DYLIBPATH}
CXX_FLINKER      = CC    ${COPTFLAGS} -R${LDIR}:${DYLIBPATH}
CXX_CCV          = CC    -V -c
CXX_SYS_LIB      = -L/opt/SUNWspro/SC4.2/lib -lF77 -lM77 -lsunmath -lnsl -lsocket -lgen -lcomplex -ldl
# ------------------------- BOPT=g_c++ options ------------------------------
GCXX_COPTFLAGS   = -g  -xs
GCXX_FOPTFLAGS   = -g  -xs
# ------------------------- BOPT=O_c++ options ------------------------------
OCXX_COPTFLAGS   = -O4  -fast -fsimple=2
OCXX_FOPTFLAGS   = -fast -dalign
# -------------------------- BOPT=g_complex options ------------------------
GCOMP_COPTFLAGS  = -g -xs
GCOMP_FOPTFLAGS  = -g -xs
# --------------------------- BOPT=O_complex options -------------------------
OCOMP_COPTFLAGS  = -O4 -fast -fsimple=2
OCOMP_FOPTFLAGS  = -fast -dalign
# ########################### PETSc install options ###########################
G_PETSCFLAGS     = -DUSE_PETSC_DEBUG  -DUSE_PETSC_LOG -DUSE_PETSC_BOPT_g \
                   -DUSE_PETSC_STACK 
O_PETSCFLAGS     = -DUSE_PETSC_DEBUG  -DUSE_PETSC_BOPT_O -DUSE_PETSC_LOG
GCXX_PETSCFLAGS  = -DUSE_PETSC_DEBUG  -DUSE_PETSC_LOG -DUSE_PETSC_BOPT_g \
                   -DUSE_PETSC_STACK
OCXX_PETSCFLAGS  =  -DUSE_PETSC_DEBUG  -DUSE_PETSC_LOG -DUSE_PETSC_BOPT_O
GCOMP_PETSCFLAGS = -DUSE_PETSC_DEBUG  -DUSE_PETSC_LOG -DUSE_PETSC_BOPT_g \
                   -DUSE_PETSC_COMPLEX  -DUSE_FORTRAN_KERNELS -DUSE_PETSC_STACK
OCOMP_PETSCFLAGS = -DUSE_PETSC_DEBUG  -DUSE_PETSC_LOG -DUSE_PETSC_BOPT_O \
                   -DUSE_PETSC_COMPLEX  -DUSE_FORTRAN_KERNELS

##################################################################################
#
#   PETSc installers should very rarely ever need to edit anything below this 
#
##################################################################################

PARCH    = solaris


include ${PETSC_DIR}/bmake/common

libc: ${LIBNAME}(${OBJSC})
libf: ${LIBNAME}(${OBJSF})


#############
shared: chkopts_basic
	-@echo making shared libraries in ${LDIR} ;\
	cd ${LDIR}; \
	${RM} -rf tmp; \
	mkdir tmp; \
	cd tmp; \
	for LIBNAME in ${SHLIBS} ; \
	do \
	  flag=""; \
	  if [ -f ${LDIR}/$$LIBNAME.${SLSUFFIX} ]; then \
            flag=`find ${LDIR} -type f -name $$LIBNAME.a -newer ${LDIR}/$$LIBNAME.${SLSUFFIX} -print`; \
	  else \
	    flag="true"; \
	  fi; \
          if [ "$$flag" != "" ]; then \
	    echo "building $$LIBNAME.${SLSUFFIX}"; \
	    ${AR} x ../$$LIBNAME.a ;\
	    ${LD} -G  -h $$LIBNAME.${SLSUFFIX} *.o  -o ../$$LIBNAME.${SLSUFFIX} ; \
	    ${RM} -f * ; \
	  fi; \
	done ;\
	cd ../ ; \
	${RM} -rf tmp
#
#  Generates a shared library from any .a library; not just the PETSc ones
#  This is to allow any user to generate his or her own shared library
#
#  The ${PETSC_LIB} -lC is too tell the linker the location of the libC.a 
#  library and force it to include those symbols into the shared library.
#  Since there is no .so version of the libC.a it must be done this way.

oshared: chkopts_basic
	-${RM} -rf tmp; \
	mkdir tmp; \
	cd tmp; \
        echo "building ${LIBNAME}.${SLSUFFIX}"; \
	${AR} x ${LIBNAME}.a ;\
	${LD} -G  -h ${LIBNAME}.${SLSUFFIX} *.o  -o ${LIBNAME}.${SLSUFFIX} \
              ${PETSC_LIB} -lC ; \
	cd ../ ; \
	${RM} -rf tmp






AR       = ar
RM       = rm -f
OMAKE    = make
RANLIB   = true
SHELL    = /bin/sh
CLINKER  = cc ${COPTFLAGS} -R${LDIR}:${DYLIBPATH}
FLINKER  = f90 ${FOPTFLAGS} -R${LDIR}:${DYLIBPATH}

SYS_LIB  = -lnsl -lsocket -lgen

include ${PETSC_DIR}/bmake/common

libc: ${LIBNAME}(${OBJSC})
libf: ${LIBNAME}(${OBJSF})


#############
shared: chkopts_basic
	-@echo making shared libraries in ${LDIR} ;\
	cd ${LDIR}; \
	${RM} -rf tmp; \
	mkdir tmp; \
	cd tmp; \
	for LIBNAME in ${SHLIBS} ; \
	do \
	  flag=""; \
          if [ -f ${LDIR}/$$LIBNAME.a ]; then \
	    if [ -f ${LDIR}/$$LIBNAME.${SLSUFFIX} ]; then \
              flag=`find ${LDIR} -type f -name $$LIBNAME.a -newer ${LDIR}/$$LIBNAME.${SLSUFFIX} -print`; \
	    else \
	      flag="true"; \
	    fi; \
            if [ "$$flag" != "" ]; then \
	      echo "building $$LIBNAME.${SLSUFFIX}"; \
	      ${AR} x ../$$LIBNAME.a ;\
	      ${LD} -G  -h $$LIBNAME.${SLSUFFIX} *.o  -o ../$$LIBNAME.${SLSUFFIX} ; \
	      ${RM} -f * ; \
  	    fi; \
	  fi; \
	done ;\
	cd ../ ; \
	${RM} -rf tmp








