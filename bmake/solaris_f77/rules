# $Id: base,v 1.6 1999/01/25 21:57:51 bsmith Exp balay $ 
#

include ${PETSC_DIR}/bmake/common
include ${PETSC_DIR}/bmake/${PETSC_ARCH}/base_variables

libc: ${LIBNAME}(${OBJSC})
libf: ${LIBNAME}(${OBJSF})


#############
shared: chkopts_basic
	-@echo making shared libraries in ${LDIR} ;\
	cd ${LDIR}; \
	${RM} -rf tmp; \
	mkdir tmp; \
	cd tmp; \
	for LIBNAME in ${SHLIBS} ; \
	do \
	  flag=""; \
	  if [ -f ${LDIR}/$$LIBNAME.${SLSUFFIX} ]; then \
            flag=`find ${LDIR} -type f -name $$LIBNAME.a -newer ${LDIR}/$$LIBNAME.${SLSUFFIX} -print`; \
	  else \
	    flag="true"; \
	  fi; \
          if [ "$$flag" != "" ]; then \
	    echo "building $$LIBNAME.${SLSUFFIX}"; \
	    ${AR} x ../$$LIBNAME.a ;\
	    ${LD} -G  -h $$LIBNAME.${SLSUFFIX} *.o  -o ../$$LIBNAME.${SLSUFFIX} ; \
	    ${RM} -f * ; \
	  fi; \
	done ;\
	cd ../ ; \
	${RM} -rf tmp
#
#  Generates a shared library from any .a library; not just the PETSc ones
#  This is to allow any user to generate his or her own shared library
#
#  The ${PETSC_LIB} -lC is too tell the linker the location of the libC.a 
#  library and force it to include those symbols into the shared library.
#  Since there is no .so version of the libC.a it must be done this way.

oshared: chkopts_basic
	-${RM} -rf tmp; \
	mkdir tmp; \
	cd tmp; \
        echo "building ${LIBNAME}.${SLSUFFIX}"; \
	${AR} x ${LIBNAME}.a ;\
	${LD} -G  -h ${LIBNAME}.${SLSUFFIX} *.o  -o ${LIBNAME}.${SLSUFFIX} \
              ${PETSC_LIB} -lC ; \
	cd ../ ; \
	${RM} -rf tmp






AR       = ar
RM       = rm -f
OMAKE    = make
RANLIB   = true
SHELL    = /bin/sh
CLINKER  = cc ${COPTFLAGS} -R${LDIR}:${DYLIBPATH}
FLINKER  = f90 ${FOPTFLAGS} -R${LDIR}:${DYLIBPATH}

SYS_LIB  = -lnsl -lsocket -lgen

include ${PETSC_DIR}/bmake/common

libc: ${LIBNAME}(${OBJSC})
libf: ${LIBNAME}(${OBJSF})


#############
shared: chkopts_basic
	-@echo making shared libraries in ${LDIR} ;\
	cd ${LDIR}; \
	${RM} -rf tmp; \
	mkdir tmp; \
	cd tmp; \
	for LIBNAME in ${SHLIBS} ; \
	do \
	  flag=""; \
          if [ -f ${LDIR}/$$LIBNAME.a ]; then \
	    if [ -f ${LDIR}/$$LIBNAME.${SLSUFFIX} ]; then \
              flag=`find ${LDIR} -type f -name $$LIBNAME.a -newer ${LDIR}/$$LIBNAME.${SLSUFFIX} -print`; \
	    else \
	      flag="true"; \
	    fi; \
            if [ "$$flag" != "" ]; then \
	      echo "building $$LIBNAME.${SLSUFFIX}"; \
	      ${AR} x ../$$LIBNAME.a ;\
	      ${LD} -G  -h $$LIBNAME.${SLSUFFIX} *.o  -o ../$$LIBNAME.${SLSUFFIX} ; \
	      ${RM} -f * ; \
	    fi; \
	  fi; \
	done ;\
	cd ../ ; \
	${RM} -rf tmp








