# $Id: base,v 1.33 1997/09/15 20:38:16 bsmith Exp balay $ 

PARCH    = freebsd
#CC       = /usr/local/gcc-2.7.2/bin/gcc  -DPARCH_freebsd
CC       = /home/alice/egcs/freebsd/bin/gcc -DPARCH_freebsd
#
#  Indicates the version of the compiler you are using; if you do not know
#  how to get the version number then leave this blank.
#
CCV      = $(CC) --version
#
#
# We use the f77 f2c that comes with freebsd, the -Nn1000 is required for
# large Fortran files, you can increase the 1000 if need be.
# 
#FC       = f77 -Nn1000
FC       = /home/alice/egcs/freebsd/bin/g77 
AR       = ar
RM       = rm -f *.c.*
#
#  We've found that we have to use gnumake on FreeBSD since
# the native make is non-standard. On your machine gmake may 
# be named gnumake.
#
OMAKE    = gmake  --no-print-directory
RANLIB   = ranlib
SHELL    = /bin/sh
#CLINKER  = /usr/local/gcc-2.7.2/bin/gcc $(COPTFLAGS)
#FLINKER  = f77 $(FOPTFLAGS)
CLINKER  = /home/alice/egcs/freebsd/bin/gcc $(COPTFLAGS)
FLINKER  = /home/alice/egcs/freebsd/bin/g77 $(FOPTFLAGS)

FCONF    = -DHAVE_FORTRAN_UNDERSCORE -DHAVE_FORTRAN_UNDERSCORE_UNDERSCORE 
CONF     = -DHAVE_PWD_H -DHAVE_STDLIB_H -DHAVE_STRING_H \
           -DHAVE_SWAPPED_BYTES -DHAVE_X11 \
           -DHAVE_DRAND48  -DHAVE_GETDOMAINNAME \
           -DHAVE_UNISTD_H  \
           -DHAVE_UNAME -DHAVE_SYS_TIME_H $(FCONF)
SYS_LIB  = 

include $(PETSC_DIR)/bmake/common

libc: $(LIBNAME)($(OBJSC))
libf: $(LIBNAME)($(OBJSF))

#########
# This F.f rule ensures that the old *.f files are removed.
#

.F.f:
	$(RM) $*.f
	-cpp $(CPPFLAGS)  $*.F > $*.f 

.F.o:
	$(RM) $*.f
	-cpp $(CPPFLAGS)  $*.F > $*.f 
	-$(FC) -c $(FFLAGS) $(FOPTFLAGS) $*.f
	$(RM) $*.f

.F.a: 
	$(RM) $*.f
	-cpp $(CPPFLAGS) $*.F  > $*.f
	-$(FC) -c $(FFLAGS) $(FOPTFLAGS) $*.f
	$(RM) $*.f
	$(AR) cr $(LIBNAME) $*.o
	$(RM) -f $*.o


# SHARED LIBRARIES
# To create PETSc libraires as shared libraries do the following:
# 1. modify base, base.g_c++, base.O_c++, base.g_complex base.O_complex 
# and add "-fPIC" flag for "gcc", "g++" as where CC is defined.
# CC       = gcc  -DPARCH_freebsd -fPIC
#
# 2. Add the following target to "base"
#SLSUFFIX = so.1.0
#shared: chkopts_basic
#	-@echo making shared libraries in $(LDIR) ;\
#	cd $(LDIR); \
#	for LIBNAME in $(SHLIBS) ; \
#	  do $(LD) -Bshareable -Bforcearchive -o $$LIBNAME.$(SLSUFFIX) $$LIBNAME.a  > /dev/null 2>&1; \
#	done
#
#3. To make shared libs do in PETSC_DIR:
#   make BOPT=g all fortran shared
#   If the regular libraries are already built, you have to rebuild them.
#
#4. To build an example uisng petsc shared library do:
#   cd petsc/src/sles/tutorials
#   make BOPT=g ex5
#
#6. To run this example do:
#   setenv LD_LIBRARY_PATH /*****/petsc/lib/libg/freebsd
#   mpirun ex5
#
#  It is because of 6 that we don't automatically use shared libraries
# under freebsd. Since that path has be changed depending on what 
# version of the libraries, g, O, g_c++ etc you are using.
