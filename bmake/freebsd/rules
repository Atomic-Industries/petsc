
CC       = gcc  -DPARCH_freebsd
FC       = f77
AR       = ar
RM       = rm -f *.c.*
#
#  We've found that we have to use gnumake on FreeBSD since
# the native make is non-standard. On your machine gmake may 
# be named gnumake.
#
OMAKE    = gmake  --no-print-directory
RANLIB   = ranlib
SHELL    = /bin/sh
CLINKER  = gcc $(COPTFLAGS)
FLINKER  = f77 $(FOPTFLAGS)
CONF     = -DHAVE_PWD_H -DHAVE_STDLIB_H -DHAVE_STRING_H \
           -DHAVE_SWAPPED_BYTES -DHAVE_X11 -DHAVE_FORTRAN_UNDERSCORE \
           -DHAVE_DRAND48  -DHAVE_GETDOMAINNAME \
           -DHAVE_FORTRAN_UNDERSCORE_UNDERSCORE -DHAVE_UNISTD_H  \
           -DHAVE_SYS_TIME_H
SYS_LIB  = 

include $(PETSC_DIR)/bmake/common

libc: $(LIBNAME)($(OBJSC))
libf: $(LIBNAME)($(OBJSF))

#############
.F.o:
	$(RM) $*.f
	-cpp $(CPPFLAGS)  $*.F > $*.f 
	-$(FC) -c $(FFLAGS) $(FOPTFLAGS) $*.f
	$(RM) $*.f

.F.a: 
	$(RM) $*.f
	-cpp $(CPPFLAGS) $*.F  > $*.f
	-$(FC) -c $(FFLAGS) $(FOPTFLAGS) $*.f
	$(RM) $*.f
	$(AR) cr $(LIBNAME) $*.o
	$(RM) -f $*.o

shared: chkopts
	-@echo making shared libraries in $(LDIR) ;\
	cd $(LDIR); \
	for LIBNAME in $(SHLIBS) ; \
	  do $(LD) -Bshareable -Bforcearchive -o $$LIBNAME.so.1.0 $$LIBNAME.a ; \
	done
