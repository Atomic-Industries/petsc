# $Id: base,v 1.55 1999/01/25 22:16:38 bsmith Exp $ 
#
#     See the file .... for a complete explanation of all these fields
#
AR               = ar
RM               = rm -f
OMAKE            = make
RANLIB           = ranlib
SHELL            = /bin/sh
# ######################### C and Fortran compiler ########################
#
C_CC             = gcc -fPIC
C_FC             = f77 -Nn1000
C_CLINKER        = gcc ${COPTFLAGS} -Wl,-R,${LDIR}:${DYLIBPATH}
C_FLINKER        = f77 ${FOPTFLAGS} -Wl,-R,${LDIR}:${DYLIBPATH}
C_CCV            = gcc --version
C_SYS_LIB        = -lf2c -lm
# ---------------------------- BOPT=g options ----------------------------
G_COPTFLAGS      = -g -Wall -Wshadow  -fomit-frame-pointer  
G_FOPTFLAGS      = -g
# ----------------------------- BOPT=O options -----------------------------
O_COPTFLAGS      = -O -Wall -Wshadow  -fomit-frame-pointer  
O_FOPTFLAGS      = -O
# ########################## C++ compiler ##################################
#
CXX_CC          = g++ -fPIC
CXX_FC          = f77 -Nn1000
CXX_CLINKER     = g++ ${COPTFLAGS} -Wl,-R,${LDIR}:${DYLIBPATH}
CXX_FLINKER     = g++ ${COPTFLAGS} -Wl,-R,${LDIR}:${DYLIBPATH}
CXX_CCV         = g++ --version
CXX_SYS_LIB     = -lf2c -lm
# ------------------------- BOPT=g_c++ options ------------------------------
GCXX_COPTFLAGS   = -g 
GCXX_FOPTFLAGS   = -g
# ------------------------- BOPT=O_c++ options ------------------------------
OCXX_COPTFLAGS   = -O
OCXX_FOPTFLAGS   = -O
# -------------------------- BOPT=g_complex options ------------------------
GCOMP_COPTFLAGS  = -g 
GCOMP_FOPTFLAGS  = -g
# --------------------------- BOPT=O_complex options -------------------------
OCOMP_COPTFLAGS  = -O 
OCOMP_FOPTFLAGS  = -O
# ########################### PETSc install options ###########################
#
G_PETSCFLAGS     = -DUSE_PETSC_DEBUG -DUSE_PETSC_BOPT_g -DUSE_PETSC_STACK \
	           -DUSE_PETSC_LOG
O_PETSCFLAGS     = -DUSE_FOR_KERNELS -DUSE_PETSC_DEBUG  -DUSE_PETSC_BOPT_O \
	           -DUSE_PETSC_LOG
GCXX_PETSCFLAGS  = -DUSE_PETSC_DEBUG  -DUSE_PETSC_LOG -DUSE_PETSC_BOPT_g \
                   -DUSE_PETSC_STACK 
OCXX_PETSCFLAGS  = -DUSE_PETSC_DEBUG  -DUSE_PETSC_LOG -DUSE_PETSC_BOPT_O 
GCOMP_PETSCFLAGS = -DUSE_PETSC_DEBUG -DUSE_PETSC_BOPT_g -DUSE_PETSC_LOG  \
                   -DUSE_PETSC_COMPLEX -DUSE_PETSC_STACK \
                   -DUSES_TEMPLATED_COMPLEX -DUSE_FORTRAN_KERNELS
OCOMP_PETSCFLAGS = -DUSE_PETSC_DEBUG -DUSE_PETSC_BOPT_O -DUSE_PETSC_LOG \
                   -DUSE_PETSC_COMPLEX -DUSES_TEMPLATED_COMPLEX

##################################################################################
#
#   PETSc installers should very rarely ever need to edit anything below this 
#
##################################################################################

PARCH    = freebsd

include ${PETSC_DIR}/bmake/common

libc: $(OBJSC)
	ar crl $(LIBNAME) $(OBJSC)
libf: $(OBJSF)
	ar crl $(LIBNAME) $(OBJSF)

#########
#
#  .F.f: target is nolonger required, but retained, as it is
#  useful to check what the preprocessor output.
#
.F.f:
	-${RM} __$*.f
	-${CC} -E -traditional-cpp -x c ${FCPPFLAGS} $*.F  > __$*.f
.F.o:
	-${RM} __$*.f
	-${CC} -E -traditional-cpp -x c ${FCPPFLAGS} $*.F  > __$*.f
	-${FC} -c ${FOPTFLAGS} ${FFLAGS} __$*.f -o $*.o 2>&1 | grep -v EXTERNAL
	-${RM} __$*.f

.F.a:
	-${RM} __$*.f
	-${CC} -E -traditional-cpp -x c ${FCPPFLAGS} $*.F  > __$*.f
	-${FC} -c ${FOPTFLAGS} ${FFLAGS} __$*.f -o $*.o 2>&1 | grep -v EXTERNAL
	-${AR} cr ${LIBNAME} $*.o
	-${RM} __$*.f

SLSUFFIX = so.1.0
shared: chkopts_basic
	-@echo making shared libraries in ${LDIR} ;\
	cd ${LDIR}; \
	for LIBNAME in ${SHLIBS} ; \
	do  \
          if [ -f ${LDIR}/$$LIBNAME.a ]; then \
	    flag=""; \
	    if [ -f ${LDIR}/$$LIBNAME.${SLSUFFIX} ]; then \
              flag=`find ${LDIR} -type f -name $$LIBNAME.a -newer ${LDIR}/$$LIBNAME.${SLSUFFIX} -print`; \
	    else \
	      flag="true"; \
	    fi; \
	    if [ "$$flag" != "" ]; then \
	      echo "building $$LIBNAME.${SLSUFFIX}"; \
	      ${LD} -Bshareable -Bforcearchive -o $$LIBNAME.${SLSUFFIX} $$LIBNAME.a  > /dev/null 2>&1; \
	    fi; \
	  fi; \
	done

#
# Notes:
#
# We use the f77 f2c that comes with freebsd, the -Nn1000 is required for
# large Fortran files, you can increase the 1000 if need be.
#
# Older versions of freebsd may require the use of gnumake
# If you encounter problems with freebsd-make please send
# the output of make to petsc-maint@mcs.anl.gov
# 
#OMAKE    = gmake  --no-print-directory



