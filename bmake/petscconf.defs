
   This file contains a complete list of the configure variables that 
are used in the installation of PETSc. 

The biggest one is to use SIZEOF_VOIDP and SIZEOF_LONG as the number of
bytes in a void * or long respectively (SIZEOF_<anytypeincaps> is ok).


HAVE_BROKEN_RECURSIVE_MACRO - CPP processes recursive use of macros incorrectly

HAVE_BROKEN_REQUEST_FREE - MPI_Request_free() either generates an error or 
                           messes up later MPI calls. Known to be a problem 
                           with IBM MPI and at least earlier MPICH

HAVE_DOUBLE_ALIGN - double variables ARE always double aligned on this system

HAVE_DOUBLE_ALIGN_MALLOC - malloc always returns memory that is double aligned

HAVE_FAST_MPI_WTIME - the MPI_WTIME is accurate and fast on this machine, so
                      we use this for all PETSc timings rather than a system timer

HAVE_MEMALIGN - the system routine memalign() exists and is used to ensure that
                all Scalars are allocated with the correct alignment

HAVE_MISSING_DGESVD - the Lapack routine DGESVD is missing from the vendor provided
                      math libraries. This is true on the Cray T3D/T3E

HAVE_SLOW_NRM2 - BLAS nrm2() routine is so slow it is better to replace with code.
                 True if using the Netlib version of the BLAS.

HAVE_VPRINTF_CHAR - final argument to vprintf() is a char *, rather than the usual void *
                    true under freebsd #if (__GNUC__ == 2 && __GNUC_MINOR__ >= 7)

SIZEOF_VOIDP - used in handling passing pointers to PETSc objects between
               C and Fortran. When this is 8 (bytes) then we use integer*8
               as PetscFortranAddr and PetscOffset. 

SIZEOF_INT - used when reading/writing binary files. We always save using
             32 bits for portability, so when this is on, the integers
             are first compressed to 32 bits before being written

