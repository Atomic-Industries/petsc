# $Id: base,v 1.18 1999/02/24 23:28:33 balay Exp balay $ 
#
include ${PETSC_DIR}/bmake/${PETSC_ARCH}/base_variables
include ${PETSC_DIR}/bmake/common

libc: ${LIBNAME}(${OBJSC} ${SOBJSC})
libadic: ${LIBNAME}(${OBJSADIC})
libf: ${LIBNAME}(${OBJSF})

#############
#
#   These are alternative rules for Fortran compilers that 
#   do not understand the .F suffix

#.F.f:
#	-${RM} __$*.f
#	-${CC} -E -P -traditional-cpp -x c ${FCPPFLAGS} $*.F | grep -v '^C' > __$*.f
#.F.o:
#	-${RM} __$*.f
#	-${CC} -E -P -traditional-cpp -x c ${FCPPFLAGS} $*.F | grep -v '^C' > __$*.f
#	-${FC} -c ${FOPTFLAGS} ${FFLAGS} __$*.f -o $*.o
#	-${RM} __$*.f
#
#.F.a:
#	-${RM} __$*.f
#	-${CC} -E -P -traditional-cpp -x c ${FCPPFLAGS}  $*.F | grep -v '^C' > __$*.f
#	-${FC} -c ${FOPTFLAGS} ${FFLAGS} __$*.f -o $*.o
#	-${AR} cr ${LIBNAME} $*.o
#	-${RM} __$*.f
#
SLSUFFIX = so.1.0 
shared: chkopts_basic
	-@ if [ "${BOPT}" != "Opg" ] && [ "${BOPT}" != "Opg_c++" ] \
	&&  [ "${BOPT}" != "Opg_complex" ] ; then \
	echo making shared libraries in ${LDIR} ;\
	cd ${LDIR}; \
	${RM} -rf tmp; \
	mkdir tmp; \
	cd tmp; \
	for LIBNAME in ${SHLIBS} ; \
	do \
          if [ -f ${LDIR}/$$LIBNAME.a ]; then \
	    flag=""; \
	    if [ -f ${LDIR}/$$LIBNAME.${SLSUFFIX} ]; then \
              flag=`find ${LDIR} -type f -name $$LIBNAME.a -newer ${LDIR}/$$LIBNAME.${SLSUFFIX} -print`; \
	    else \
	      flag="true"; \
	    fi; \
            if [ "$$flag" != "" ]; then \
	      echo "building $$LIBNAME.${SLSUFFIX}"; \
	      ${AR} x ../$$LIBNAME.a ;\
	      gcc ${COPTFLAGS} -fPIC -shared  *.o  -o ../$$LIBNAME.${SLSUFFIX} ; \
	      ${RM} -f * ; \
	    fi; \
	  fi; \
	done; \
	cd ../ ; \
	${RM} -rf tmp; \
	fi
#
#  Generates a shared library from any .a library; not just the PETSc ones
#  This is to allow any user to generate his or her own shared library
#
oshared: 
	-@${RM} -rf tmp; \
	mkdir tmp; \
	cd tmp; \
        echo "building ${LIBNAME}.${SLSUFFIX}"; \
	${AR} x ../${LIBNAME}.a ;\
	gcc ${COPTFLAGS} -fPIC -shared *.o  -o ../${LIBNAME}.${SLSUFFIX}; \
	cd ../ ; \
	${RM} -rf tmp
