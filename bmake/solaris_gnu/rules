# $Id: base,v 1.27 1999/01/25 21:49:38 bsmith Exp balay $ 
#
#     See the file .... for a complete explanation of all these fields
#
AR               = ar
RM               = rm -f
OMAKE            = make
RANLIB           = true
SHELL            = /bin/sh
# ######################### C and Fortran compiler ########################
#
C_CC             = gcc -fPIC
C_FC             = g77
C_CLINKER        = gcc ${COPTFLAGS} -Wl,-R,${LDIR}:${DYLIBPATH}
C_FLINKER        = g77 ${FOPTFLAGS} -Wl,-R,${LDIR}:${DYLIBPATH}
C_CCV            = ${C_CC} --version
C_SYS_LIB        = -lnsl -lsocket -lc -lg2c
# ---------------------------- BOPT=g options ----------------------------
G_COPTFLAGS      = -g  -Wshadow  -fomit-frame-pointer
G_FOPTFLAGS      = -g
# ----------------------------- BOPT=O options -----------------------------
O_COPTFLAGS      = -O -Wshadow  -fomit-frame-pointer
O_FOPTFLAGS      = -O
# ########################## C++ compiler ##################################
#
CXX_CC           = g++ -fPIC
CXX_FC           = g77
CXX_CLINKER      = g++ ${COPTFLAGS} -Wl,-R,${LDIR}:${DYLIBPATH}
CXX_FLINKER      = g++ ${COPTFLAGS} -Wl,-R,${LDIR}:${DYLIBPATH}
CXX_CCV          = ${CXX_CC} --version
CXX_SYS_LIB      = -lnsl -lsocket -lc -lg2c
# ------------------------- BOPT=g_c++ options ------------------------------
GCXX_COPTFLAGS   = -g
GCXX_FOPTFLAGS   = -g
# ------------------------- BOPT=O_c++ options ------------------------------
OCXX_COPTFLAGS   = -O
OCXX_FOPTFLAGS   = -O
# -------------------------- BOPT=g_complex options ------------------------
GCOMP_COPTFLAGS  = -g
GCOMP_FOPTFLAGS  = -g
# --------------------------- BOPT=O_complex options -------------------------
OCOMP_COPTFLAGS  = -O
OCOMP_FOPTFLAGS  = -O
# ########################### PETSc install options ###########################
G_PETSCFLAGS     = -DUSE_PETSC_DEBUG  -DUSE_PETSC_LOG -DUSE_PETSC_BOPT_g \
                   -DUSE_PETSC_STACK 
O_PETSCFLAGS     = -DUSE_PETSC_DEBUG  -DUSE_PETSC_BOPT_O -DUSE_PETSC_LOG
GCXX_PETSCFLAGS  = -DUSE_PETSC_DEBUG  -DUSE_PETSC_LOG -DUSE_PETSC_BOPT_g \
                   -DUSE_PETSC_STACK
OCXX_PETSCFLAGS  =  -DUSE_PETSC_DEBUG  -DUSE_PETSC_LOG -DUSE_PETSC_BOPT_O
GCOMP_PETSCFLAGS = -DUSE_PETSC_DEBUG  -DUSE_PETSC_LOG -DUSE_PETSC_BOPT_g \
                   -DUSE_PETSC_COMPLEX  -DUSE_FORTRAN_KERNELS -DUSE_PETSC_STACK
OCOMP_PETSCFLAGS = -DUSE_PETSC_DEBUG  -DUSE_PETSC_LOG -DUSE_PETSC_BOPT_O \
                   -DUSE_PETSC_COMPLEX  -DUSE_FORTRAN_KERNELS

##################################################################################
#
#   PETSc installers should very rarely ever need to edit anything below this 
#
##################################################################################

PARCH  =  solaris

include ${PETSC_DIR}/bmake/common

libc: ${LIBNAME}(${OBJSC})
libf: ${OBJSF}
	ar crl ${LIBNAME} ${OBJSF}

#############
shared: chkopts_basic
	-@ if [ "${BOPT}" != "Opg" ] && [ "${BOPT}" != "Opg_c++" ] \
	&&  [ "${BOPT}" != "Opg_complex" ] ; then \
	echo making shared libraries in ${LDIR} ;\
	cd ${LDIR}; \
	${RM} -rf tmp; \
	mkdir tmp; \
	cd tmp; \
	for LIBNAME in ${SHLIBS} ; \
	do \
          if [ -f ${LDIR}/$$LIBNAME.a ]; then \
	    flag=""; \
	    if [ -f ${LDIR}/$$LIBNAME.${SLSUFFIX} ]; then \
              flag=`find ${LDIR} -type f -name $$LIBNAME.a -newer ${LDIR}/$$LIBNAME.${SLSUFFIX} -print`; \
	    else \
	      flag="true"; \
	    fi; \
            if [ "$$flag" != "" ]; then \
	      echo "building $$LIBNAME.${SLSUFFIX}"; \
	      ${AR} x ../$$LIBNAME.a ;\
	      ${LD} -G  -h $$LIBNAME.${SLSUFFIX} *.o  -o ../$$LIBNAME.${SLSUFFIX} ; \
	      ${RM} -f * ; \
	    fi; \
	  fi; \
	done ;\
	cd ../ ; \
	${RM} -rf tmp; \
	fi
