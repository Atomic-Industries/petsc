This directory contains routines to inline common vector (and a few matrix)
operations.  The translations are relatively straightforward; the purpose
of placing them here is to maximize the flexibility of specific implementation,
including the possibility of calling special-purpose assembly language routines.

In order to help pick the appropriate setting of the macro, there are some
test programs that can be run to pick the best choice for each architecture.

The possible choices are:
<NULL>       - For loops
UNROLL       - unrolled For loops
UNROLL_WHILE - unrolled while loops
INLINE_WHILE - rolled while loops
INLINE_FOR   - unrolled for loops, with intermediate values written to 
	       registers to allow loads and stores to overlap better.
	       Specifically, these load values into register variables,
	       do the operations on those, and then store.  The loop is
	       unrolled some to allow more overlap of loads and stores.

Note that in the case that there is no special code, the <NULL> choice (a 
for loop) will be used.

Lots of these have been tested.  The most effective choices have been:
INLINE_FOR, <NULL>, and routine (when special assembly language routines
available).  The compiler often does simple unrolling; unrolling into 
registers gives the compiler more freedom (given C semantics) to 
rearrange the use of the load and store operations (note that making
a number of consequtive accesses can significantly improve performance,
particularly when the cost of changing memory pages is high, as it is
in intel/i860 nodes).

This directory contains a new and an old version.  The old version contains
some rather randomly chosen macros.  The new versions are meant to be
consistent with the interface to the level 1-3 blas (note that these
emphasize a simple interface that is not as general but handles common cases.

To make the names of the macros uniform, we follow the following rules:

    [data_type][operand_type][operation][RT/IL/<default>]

Where:
    data_type: 
    D double
    Z dcomplex
    I int
    L long
    F float

    operand_type:
    <null> dense
    SP     sparse
    SD     sparse-dense (only where sparse-sparse makes sense)
 
    operation:
    Mnemonic for the operations (MV - matrix-vector product).  Names follow
    blas where reasonable.

    RT        - calls a routine
    IL        - inline code
    <default> - version judged best

Finally, all of these hand-coded versions are getting tiresome.  I'm tempted
to establish a subdirectory for each variety, including the appropriate
versions for each option.  As with the "comm" routines, for any routine
not implemented, a default could be chosen.
