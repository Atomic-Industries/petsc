#!/usr/bin/env python
#import sys, os, math, glob
import matplotlib.pyplot as plt
import numpy as np
#import os
#import matplotlib.ticker as ticker
#from numpy import array
plt.close()
q2 = np.loadtxt("error.Q2.txt")
q3 = np.loadtxt("error.Q3.txt")
q4 = np.loadtxt("error.Q4.txt")
q5 = np.loadtxt("error.Q5.txt")
#fig, (ax1, ax2) = plt.subplots(1, 2)
#fig.suptitle('Error with stable initial conditions')
plt.close()
plt.ylabel('Error: L2($f_e$ - Maxwell)/L2(Maxwell)')
plt.xlabel('Time (sec)')
plt.title('Error: |$f_e$ - Maxwellian|/|Maxwellian| in electrons')
#ticks = np.arange(.01, .1, 2)
#ticklabels = [r"$10^{}$".format(tick) for tick in ticks]
#plt.yticks(ticks, ticklabels)
plt.semilogy(q2[:,0],(q2[:,1]),'.',label="Q2")
plt.semilogy(q3[:,0],(q3[:,1]),'*',label="Q3")
plt.semilogy(q4[:,0],(q4[:,1]),'s',label="Q4")
plt.semilogy(q5[:,0],(q5[:,1]),'d',label="Q5")
#ax1.set_aspect(aspect=2)
xmin, xmax, ymin, ymax = plt.axis()
#xmin, xmax, ymin, ymax = plt.axis([xmin, xmax, .1, 1.5])
plt.grid()
plt.legend(ncol=1,loc="upper left", shadow=False, fancybox=True,title="Degree", framealpha=0.5)
plt.savefig('e_L2error.png')
plt.close()
plt.ylabel('Error: L2($f_i$ - Maxwell)/L2(Maxwell)')
plt.xlabel('Time (sec)')
plt.title('Error: |$f_i$ - Maxwellian|/|Maxwellian| in ions')
#plt.axis([0, 900, 60, 100])
plt.semilogy(q2[:,0],q2[:,2],'.',label="Q2")
plt.semilogy(q3[:,0],q3[:,2],'*',label="Q3")
plt.semilogy(q4[:,0],q4[:,2],'s',label="Q4")
plt.semilogy(q5[:,0],q5[:,2],'d',label="Q5")
#plt.yticks(ticks, ticklabels)
plt.grid()
xmin, xmax, ymin, ymax = plt.axis()
#xmin, xmax, ymin, ymax = plt.axis([xmin, xmax, 1e-5, ymax])
plt.legend(ncol=1,loc="upper left", shadow=False, fancybox=True,title="Degree", framealpha=0.5)
#plt.show()
plt.savefig('i_L2error.png')
#plt.xticks(x, x, rotation='horizontal')
#plt.show()
