#! /bin/sh
#
#  Locate the PETSc directory
#
if [ "$PETSC_DIR" != "" ]; then
  if [ -d $PETSC_DIR ]; then
    if [ ! -f $PETSC_DIR/include/petscversion.h ]; then
      echo "Though the directory " $PETSC_DIR " indicated by the"
      echo "PETSC_DIR environmental variable exists it does not"
      echo "have the include/petscversion.h file" 
      exit
    fi
  else
    echo "The environmental variable PETSC_DIR points to a nonexistent"
    echo "directory: " $PETSC_DIR
    exit
  fi
else
  if [ -f include/petscversion.h ]; then
    PETSC_DIR=`pwd`
  else
    echo "Cannot determine the PETSc installation directory"
    echo "Either run petscupdate from the PETSc installation directory"
    echo "or set the environmental variable PETSC_DIR and run petscupdate again"
    exit
  fi
fi
#
#  Get installed PETSc version
#
VERSION_MAJOR=`grep PETSC_VERSION_MAJOR $PETSC_DIR/include/petscversion.h | sed -e "s/#define PETSC_VERSION_MAJOR[ ]*//g"`
VERSION_MINOR=`grep PETSC_VERSION_MINOR $PETSC_DIR/include/petscversion.h | sed -e "s/#define PETSC_VERSION_MINOR[ ]*//g"`
VERSION_SUBMINOR=`grep PETSC_VERSION_SUBMINOR $PETSC_DIR/include/petscversion.h | sed -e "s/#define PETSC_VERSION_SUBMINOR[ ]*//g"`
PATCH_LEVEL=`grep PETSC_PATCH_LEVEL $PETSC_DIR/include/petscversion.h | sed -e "s/#define PETSC_PATCH_LEVEL[ ]*//g"`
VERSION=$VERSION_MAJOR.$VERSION_MINOR.$VERSION_SUBMINOR
#
#  Check if urlget.py works
#
$PETSC_DIR/bin/urlget.py -v > /dev/null 2>&1
if [ $? -ne 0 ]; then
#
#   Find Python
#
  for i in python python1.5 python2 /usr/local/bin/python
  do
    $i -help  > /dev/null 2>&1
    if [ $? -ne 127 ]; then
      PYTHON=$i
      break
    fi
  done
  if [ "$PYTHON" = "" ]; then
    echo "Unable to locate a python installed on your machine"
    exit
  fi
#
#   Patch urlget.py to use correct python
#

#
#   Check if urlget.py works
#
  $PETSC_DIR/bin/urlget.py -v > /dev/null 2>&1
  if [ $? -ne 0 ]; then
    echo "Could not get python to work with urlget.py on your machine"
    exit
  fi
fi
#
#  Get the current release PETSc version
#
file=`$PETSC_DIR/bin/urlget.py http://www-unix.mcs.anl.gov/petsc/petsc-current/include/petscversion.h`
_MAJOR=`grep PETSC_VERSION_MAJOR $file | sed -e "s/#define PETSC_VERSION_MAJOR[ ]*//g"`
_MINOR=`grep PETSC_VERSION_MINOR $file | sed -e "s/#define PETSC_VERSION_MINOR[ ]*//g"`
_SUBMINOR=`grep PETSC_VERSION_SUBMINOR $file | sed -e "s/#define PETSC_VERSION_SUBMINOR[ ]*//g"`
rm -f $file
if [ $VERSION_MAJOR -lt $_MAJOR -o $VERSION_MINOR -lt $_MINOR -o $VERSION_SUBMINOR -lt $_SUBMINOR ]; then
  echo "*********************************************************************"
  echo "    There is a newer release of PETSc then your installation       "
  echo "          $_MAJOR.$_MINOR.$_SUBMINOR  vs  $VERSION "
  echo "        We recommend upgrading to the latest version "
  echo "*********************************************************************"
fi
#
#  Get the current PETSc patch level for the users PETSc version
#
file=`$PETSC_DIR/bin/urlget.py http://www-unix.mcs.anl.gov/petsc/petsc-patches.html`
PATCH=`grep "petsc-patches-$VERSION." $file | head -1 | sed -e "s?[-:/ A-Za-z0-9<>\"=.]*petsc-patches-$VERSION.\([0-9]*\).tar.gz[-:/ A-Za-z0-9<>\"=.]*?\1?g"`
rm -f $file
if [ $PATCH -eq $PATCH_LEVEL ]; then
  echo "Your patch level $PATCH_LEVEL of PETSc version $VERSION is up to date"
  exit
fi

echo "Updating PETSc directory $PETSC_DIR, PETSc version $VERSION to patch $PATCH from $PATCH_LEVEL" 

#
#  Bring over the patch tar file
#
file=`$PETSC_DIR/bin/urlget.py ftp://info.mcs.anl.gov/pub/petsc/patches/petsc-patches-$VERSION.$PATCH.tar.gz`
cd $PETSC_DIR
echo tar xf $file
echo "Updated PETSc source and documentation files"
rm -f $file
#
#  Check if the libraries are already built
#
arch=`$PETSC_DIR/bin/petscarch`
archs=`ls lib/lib*/$arch*/libpetsc.a | sed -e "s?lib/lib[gO_c+omplex]*/\([_a-zA-Z0-9]*\)/libpetsc.a?\1?g" | uniq`
for arch in $archs
do
  opts=`ls lib/lib*/$arch/libpetsc.a | sed -e "s?lib/lib\([gO_c+omplex]*\)/$arch/libpetsc.a?\1?g"`
  for opt in $opts
  do
    echo "Update $arch $opt library?"
  done
done



