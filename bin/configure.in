dnl Process this file with autoconf to produce a configure script.
dnl The file must be relative to the location of the configure program
dnl itself
dnl
dnl Caching is usually WRONG for systems with cross-mounted file systems
dnl (the cache file may correspond to a different system).  Since configure
dnl is not on a performance-critical path, go for robustness over speed.
dnl
define([AC_CACHE_LOAD], )dnl
define([AC_CACHE_SAVE], )dnl
dnl
dnl Set CFLAGS for C compiler
dnl Set LDFLAGS for things like -L/usr/local/mpi
dnl See the petsc.conf file below for an alternative approach
dnl
AC_INIT(../include/petsc.h)
if test -z "$PETSC_DIR" ; then 
    PETSC_DIR=`pwd`
fi
if test -z "$PETSC_ARCH" ; then
    AC_CANONICAL_HOST
    PETSC_ARCH="$host"
    echo "PETSC_ARCH must be defined"
    exit 1
fi
AC_SUBST(PETSC_ARCH)
AC_DEFINE_UNQUOTED(PETSC_ARCH_NAME,"$PETSC_ARCH")
dnl
dnl Place the ARG processing AFTER the petsc.conf file so that the
dnl command line args can override any defaults.
dnl
AC_ARG_WITH(mpi, mpi - Choose MPI implementation,USE_MPI=1,USE_MPI=0)
AC_ARG_ENABLE(opt, opt=flagsChoose compiler optimization,
              COPTFLAGS="$COPTFLAGS $enable_opt")
AC_ARG_ENABLE(optname, optname=name - Choose BOPT name,
              BOPTNAME="$enable_optname")
AC_ARG_ENABLE(installsite, installsite - Install bmake site files,install_sitefiles=1,
install_sitefiles=0)
dnl
AC_ARG_WITH(matlab,Include matlab interface,MATLABPATH=$withval)
dnl
AC_ARG_WITH(blas, blas=library - Use system-provided BLAS,BLAS_LIB=$withval)
AC_SUBST(BLAS_LIB)
AC_ARG_WITH(lapack, lapack=library - Use system-provide LAPACK,LAPACK_LIB=$withval)
AC_SUBST(LAPACK_LIB)
dnl
AC_ARG_WITH(blocksolve, blocksolve=library - Use BlockSolve95,BS_LIB=$withval)
AC_ARG_WITH(blocksolve-inc, blocksolve-inc=dir - Use BlockSolve95 (include path),BS_INCLUDE=$withval)
if test -n "$BS_INCLUDE" ; then
    BS_INCLUDE="-I$BS_INCLUDE"
fi
if test -n "$BS_INCLUDE" -a -n "$BS_LIB" ; then 
    PCONF="$PCONF -DHAVE_BLOCKSOLVE"
fi
AC_SUBST(BS_LIB)
AC_SUBST(BS_INCLUDE)
dnl
AC_ARG_WITH(pvode, pvode=library - Use PVODE,PVODE_LIB=$withval)
AC_ARG_WITH(pvode-inc, pvode-inc=dir - Use PVODE (include path),PVODE_INCLUDE=$withval)
if test -n "$PVODE_INCLUDE" ; then
    PVODE_INCLUDE="-I$PVODE_INCLUDE"
fi
if test -n "$PVODE_INCLUDE" -a -n "$PVODE_LIB" ; then 
    PCONF="$PCONF -DHAVE_PVODE"
fi
AC_SUBST(PVODE_LIB)
AC_SUBST(PVODE_INCLUDE)
dnl
AC_ARG_WITH(adic-inc, adic-inc=dir - Specify ADIC include directories,
            ADIC_INCLUDE="$withval")
AC_ARG_WITH(adic-lib, adic-lib=liblist - Specify ADIC library list,
            ADIC_LIB="$withval")
AC_ARG_WITH(adic-cc, adic-cc=program - Specify ADIC compiler,
            ADIC_CC="$withval")
AC_SUBST(ADIC_INCLUDE)
AC_SUBST(ADIC_LIB)
AC_SUBST(ADIC_CC)
dnl
AC_ARG_WITH(sitefile, sitefile=file - Specify sitefile,sitefile=$withval)
dnl
AC_CONFIG_HEADER(petscconf.h)
dnl
dnl PETSc can have a fairly complex site configuration.  Rather than
dnl force the user to set a zillion environment variables, we allow the user
dnl to provide a configuration file that sets the environment variables
dnl The environment variables are:
dnl
dnl CC - C compiler
dnl CFLAGS - Flags for C compiler
dnl LDFLAGS - Flags for Loader (such as additional directories)
dnl FC_LIB - Fortran/C libraries
dnl BLAS_LIB - Full LD specification for BLAS
dnl LAPACK_LIB - Full LD specification for LAPACK
AC_MSG_CHECKING(for petsc.conf file)
if test -n "$sitefile" -a -s "$sitefile" ; then
    AC_MSG_RESULT(using $sitefile)
    . $sitefile
elif test -s petsc.conf ; then
    AC_MSG_RESULT(found petsc.conf)
    . petsc.conf
elif test -s $PETSC_DIR/bmake/$PETSC_ARCH/petsc.conf ; then
    AC_MSG_RESULT(found petsc.conf in bmake/$PETSC_ARCH)
    . $PETSC_DIR/bmake/$PETSC_ARCH/petsc.conf
else
    AC_MSG_RESULT(none)
fi

dnl Checks for programs.
AC_PROG_AWK
dnl This checks preferentially for gcc.  To change, set CC
AC_PROG_CC
if test "$GCC" = "yes" ; then
    # Check if -D__USE_FIXED_PROTOTYPES__ is needed
    :
fi
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_CHECK_PROGS(MATLAB,matlab)
AC_CHECK_PROGS(FC,f77)

dnl Use --with-matlab-mex=path to select matlab support
dnl if test -z "$MATLABINCPATH" ; then
dnl     MATLABINCPATH=/usr/local/matlab/extern
dnl fi
dnl PAC_FIND_USER_LIB(mex,$MATLABPATH,MATLAB_LIB=$pac_lib_file)
dnl PAC_FIND_USER_INCLUDE(cmex,$MATLABINCPATH,MATLAB_INCLUDE=-I$pac_inc_dir)

dnl Check for UNIX variants
AC_AIX
AC_MINIX

dnl Checks for libraries.
dnl Math library
dnl AC_CHECK_LIB(m, sin)

if test $USE_MPI = 1 ; then 
    dnl MPI library; if not found, select uniprocessor version
    AC_CHECK_LIB(mpi, MPI_Init,,
    echo "No MPI library; PETSc will be compiled in uniprocessor mode" ;
    MPI_LIB="-lmpiuni";
    MPI_INCLUDE="-I$PETSC_DIR/src/mpiuni"
    MPIRUN="$PETSC_DIR/src/mpiuni/mpirun";
    )
else
    MPI_LIB="-lmpiuni"
    MPI_INCLUDE="-I$PETSC_DIR/src/mpiuni"
    MPIRUN="$PETSC_DIR/src/mpiuni/mpirun"
fi
AC_SUBST(MPI_LIB)
AC_SUBST(MPIRUN)
AC_SUBST(MPI_INCLUDE)
dnl
dnl MPICH MPE libraries
if test -n "$MPE_LIB" -a -n "$MPE_INCLUDE" ; then 
    PCONF="$PCONF -DHAVE_MPE"
fi
AC_SUBST(MPE_LIB)
AC_SUBST(MPE_INCLUDE)
dnl
AC_SUBST(PCONF)
dnl
dnl Fortran support
export CC
export FC
FC_LIB=`bin/findftnlibs | tr '\012' ' '`
AC_SUBST(FC_LIB)
dnl
dnl Determine Fortran name form
dnl FORTRAN_NAMING="-DHAVE_FORTRAN_UNDERSCORE"
#
AC_MSG_CHECKING(for Fortran external names)
# First, compile a Fortran program:
/bin/rm -f conff.f
cat > conff.f <<EOF
        subroutine d1chk()
        return
        end
EOF
if $FC -c conff.f >/dev/null 2>&1 ; then 
    :
else
    echo "Could not compile Fortran routine"
fi
# Now, build a C program and try to link with it
cat > conf.c <<EOF
main() {
d1chk_();
return 0;
}
EOF
if $CC -o conf conf.c conff.o >/dev/null 2>&1 ; then
    FORTRAN_NAMING="-DHAVE_FORTRAN_UNDERSCORE"
    /bin/rm -f conf conf.c conff.f conff.o conf.o
    AC_MSG_RESULT(trailing underscore)
else
    /bin/rm -f conf conf.c conf.o
    cat > conf.c <<EOF
main() {
d1chk();
return 0;
}
EOF
    if $CC -o conf conf.c conff.o >/dev/null 2>&1 ; then 
        FORTRAN_NAMING="-DHAVE_FORTRAN_NOUNDERSCORE"
        /bin/rm -f conf conf.c conff.f conff.o conf.o
        AC_MSG_RESULT(no underscore)
    else
        /bin/rm -f conf conf.c conf.o
        cat > conf.c <<EOF
main() {
D1CHK();
return 0;
}
EOF
        if $CC -o conf conf.c conff.o >/dev/null 2>&1 ; then 
            FORTRAN_NAMING="-DHAVE_FORTRAN_CAPS"
            /bin/rm -f conf conf.c conff.f conff.o conf.o
            AC_MSG_RESULT(uppercase)
        else
	    FORTRAN_NAMING=""
            AC_MSG_RESULT(unknown!)
        fi
    fi
fi
/bin/rm -f conf conf.c conff.f conff.o conf.o
#
# End of Fortran name checks
AC_SUBST(FORTRAN_NAMING)
dnl
dnl These need to know the Fortran naming rules first

dnl if test "$FORTRAN_NAMING" = "-DHAVE_FORTRAN_UNDERSCORE" ; then
dnl     AC_CHECK_LIB(blas,ddot_)
dnl     AC_CHECK_LIB(lapack,dgemm_)
dnl elif test "$FORTRAN_NAMING" = "-DHAVE_FORTRAN_CAPS" ; then
dnl     AC_CHECK_LIB(blas,DDOT)
dnl     AC_CHECK_LIB(lapack,DGEMM)
dnl elif test "$FORTRAN_NAMING" = "-DHAVE_FORTRAN_UNDERSCORE_UNDERSCORE" ; then
dnl     AC_CHECK_LIB(blas,ddot__)
dnl     AC_CHECK_LIB(lapack,dgemm__)
dnl else
dnl     AC_CHECK_LIB(blas,ddot)
dnl     AC_CHECK_LIB(lapack,dgemm)
dnl fi
dnl We can't use AC_CHECK_LIB, since it requires libs in the -lname and
dnl can't handle /.../blas.a etc.  People shouldn't use names that don't
dnl start with lib, but we shouldn't mandate that.
dnl
dnl Compiler options
dnl 
AC_SUBST(COPTFLAGS)
AC_SUBST(PETSCFLAGS)
AC_SUBST(FOPTFLAGS)
dnl
dnl This is needed on some older IRIX systems
AC_CHECK_LIB(sun,getpwnam)

dnl Checks for header files.
AC_PATH_X
dnl
dnl Convert results into values that we can use.  no_x is yes or empty
dnl (yes if x is turned off with --without-x, or could not find)
if test -z "$no_x" ; then
    AC_DEFINE(HAVE_X11)
fi
if test -n "$x_includes" ; then
     CPP_X_INCLUDE="-I$x_includes"
     AC_SUBST(CPP_X_INCLUDE)
fi
if test -n "$x_libraries" ; then
     # x_libraries is the directory that contains them
     X_LIBRARIES="-L$x_libraries -lX11"
     AC_SUBST(X_LIBRARIES)
fi
dnl
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h limits.h malloc.h strings.h sys/time.h unistd.h)
AC_CHECK_HEADERS(stropts.h search.h pwd.h string.h sys/systeminfo.h)
dnl 
dnl STDC checks for stdlib but also for some others.  We should probably
dnl NOT use HAVE_STDLIB_H; instead, use #if STDC_HEADERS .... #else declare 
dnl  function #endif
AC_CHECK_HEADERS(stdlib.h)
dnl
dnl Check that the stat macros work correctly.  Define STAT_MACROS_BROKEN
dnl otherwise
AC_HEADER_STAT

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_UID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MEMCMP
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(getcwd gethostname gettimeofday getwd socket strstr sysinfo uname drand48 memmove realpath readlink)
AC_CHECK_FUNCS(sigaction signal sigset)
dnl
dnl T3D didn't provide DGESVD
dnl AC_CHECK_FUNCS(dgesvd_)
dnl
dnl IBM MPI needs
dnl AC_DEFINE(HAVE_BROKEN_REQUEST_FREE)
dnl
dnl Fortran BLAS should define
dnl AC_DEFINE(HAVE_SLOW_NRM2)
dnl
dnl Special routines
echo "checking for special routines for floating-point exceptions"
case $PETSC_ARCH in
    sun4*) 
          # Despite the documentation, the IEEE functions are in libm,
          # at least in SunOS 4.1.4.  We need to do this to get 
          # the compiler to link against -lm .
          AC_CHECK_LIB(m,sin)
	  AC_CHECK_HEADERS(floatingpoint.h)
          AC_CHECK_FUNCS(ieee_flags ieee_handler)
	  ;;
    IRIX*|SGI*) 
	  AC_CHECK_LIB(fpe,handle_sigfpes)
	  AC_CHECK_HEADERS(sigfpe.h)
          dnl AC_CHECK_FUNCS(handle_sigfpes) 
	  ;;
    intelnx|paragon)
	  AC_CHECK_HEADERS(ieeefp.h)
          AC_CHECK_FUNCS(fpsetmask)
	  ;;
    rs6000|AIX)
	  AC_CHECK_HEADERS(fpxcp.h)
          AC_CHECK_HEADERS(fptrap.h)
          AC_CHECK_FUNCS(fp_sh_trap_info fp_trap fp_enable fp_disable)
          ;;
    # Other cases just use default handler.
esac

dnl
dnl The "extra commands" are not executed in the environment of the
dnl configure script, and hence can't include any variables.
dnl
dnl Note that the input and output filenames are not handled correctly
dnl by configure in the case where configure lives in a subdirectory.
dnl To work around this, we use the output:input file name options
dnl
AC_OUTPUT(bin/config/base.site:config/base.site.in bin/config/base.opt:config/base.opt.in bin/config/base:config/base.in)
dnl
if test $install_sitefiles = 1 ; then 
    if test ! -d $PETSC_DIR/bmake/$PETSC_ARCH ; then
        mkdir $PETSC_DIR/bmake/$PETSC_ARCH
    fi
    mv bin/config/base.site $PETSC_DIR/bmake/$PETSC_ARCH/base.site
    mv bin/config/base.opt $PETSC_DIR/bmake/$PETSC_ARCH/base.$BOPTNAME
    mv bin/config/base     $PETSC_DIR/bmake/$PETSC_ARCH/base
    cp petscconf.h $PETSC_DIR/bmake/$PETSC_ARCH/petscconf.h    
    # If we move the petscconf.h into the lib directory, we need to
    # fix the make all target to NOT delete it
    echo '' > $PETSC_DIR/bmake/$PETSC_ARCH/base.
fi

