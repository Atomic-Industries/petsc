#!/bin/bash

OPTIND=1
address="default"
username=$JENKINS_USERNAME
email=$JENKINS_EMAIL
branch=`git symbolic-ref -q --short HEAD`
architecture="default"

configoptions=""
silent="no"
queue="no"
status=""
results=""
cancel=""

while getopts "h?a:b:d:m:o:qr:su:" opt; do
  case "$opt" in
    h|\?)
      echo "sendToJenkins script"
      echo "Options: -h <help>"
      echo "         -a <architecture>                  -- default is 'default'"
      echo "            eg, one of linux-gcc-real, osx-10.6, etc."
      echo "            Use 'default' for arch-jenkins-* subset:"
      echo "            Use 'none' to ignore example configurations"
      echo "         -b <branch of PETSc to test>       -- default is 'next'"
      echo "         -d <number>                        -- stop/cancel build"
      echo "         -m <address to mail to>            -- required. or environmental variable JENKINS_EMAIL"
      echo "            Use 'none' if no email desired"
      echo "         -o <configure options>             -- default is empty"
      echo '            Example: -o "--with-complex --with-precision=single"'
      echo "         -q                             -- list current queue"
      echo "         -r <number>                    -- console results for job number"
      echo "         -s                                 -- silent"
      echo "         -u <username on login.mcs.anl.gov> -- default is empty or environmental variable JENKINS_USERNAME"
      exit 0
      ;;
    b)
     branch=$OPTARG
     ;;
    d)
     cancel=${OPTARG}
     ;;
    m)
     email=$OPTARG
     ;;
    o)
     configoptions=${OPTARG}
     configoptions=${configoptions// /%20}
     configoptions=${configoptions//=/%3D}
     configoptions="\&configure_options=${configoptions}"
     ;;
    q)
     queue="yes"
     ;;
    r)
     results=${OPTARG}
     ;;
    u)
     username=$OPTARG
     ;;
    a)
     architecture=${OPTARG//+/%2B}
     ;;
    s)
     silent=yes
     ;;
  esac
done


if [ -z ${username} ]; then
  url=login.mcs.anl.gov
else
  url=${username}@login.mcs.anl.gov
fi;

if [ "${email}x" == "x" ]; then
  mailto=""
else
  mailto="\&mailto=${email}"
fi


# set up connection through named proxy
command="ssh -M -S jenkins-proxy -fnNT ${url}"
if [ ${silent} == "no" ]; then
   echo ${command}
   ${command}
else
   ${command} 2> /dev/null
fi

if [ "${queue}" == "yes" ]; then
  ssh -S jenkins-proxy login.mcs.anl.gov curl -s -X POST https://jenkins-ci.mcs.anl.gov/queue/api/json?pretty=true
  exit 0
fi
if [ "x${cancel}" != "x" ]; then
  ssh -S jenkins-proxy login.mcs.anl.gov curl -s -X POST https://jenkins-ci.mcs.anl.gov/job/petsc-branch/${cancel}/stop
  exit 0
fi

if [ "x${status}" != "x" ]; then
  ssh -S jenkins-proxy login.mcs.anl.gov curl -s https://jenkins-ci.mcs.anl.gov/job/petsc-branch/${status}/api/json?pretty=true
  exit 0
fi

if [ "x${results}" != "x" ]; then
  for slave in mcs  macos; do 
      echo
      echo "******** ${slave} *************"
      ssh -S jenkins-proxy login.mcs.anl.gov curl -s https://jenkins-ci.mcs.anl.gov/job/petsc-branch/slave_label=${slave}/${results}/consoleText
      echo
  done
  exit 0
fi

if [ ${address} == "default" ]; then
  echo "Error: No email address give. Use -m <email> or -m none"
  exit 1
fi;

if [ ${architecture} == "default" ]; then
  bn=`ssh -S jenkins-proxy login.mcs.anl.gov curl -s https://jenkins-ci.mcs.anl.gov/job/petsc-branch/api/json | python -c 'import sys,json; print json.load(sys.stdin)["nextBuildNumber"]'`
  for archp in jenkins-linux-gcc-gfortran-g++-c-no-yes-real-no-__float128 jenkins-linux-gcc-gfortran-g++-c-yes-no-complex-yes-double jenkins-linux-icc-ifort-icpc-c-yes-yes-real-yes-double jenkins-osx-clang-gfortran-clang++-c++-yes-yes-real-no-single; do
    arch=${archp//+/%2B}
    echo submitting arch ${arch}, buildnumber ${bn}

    command="ssh -S jenkins-proxy ${url} curl -s -X POST https://jenkins-ci.mcs.anl.gov/job/petsc-branch/buildWithParameters?branch=${branch}${mailto}\&named_test=${arch}${configoptions}"
    if [ ${silent} == "no" ]; then
	echo "${command}"
    fi
    ${command}
    let "bn += 1"
  done
else
  command="ssh -S jenkins-proxy ${url} curl -s -X POST https://jenkins-ci.mcs.anl.gov/job/petsc-branch/buildWithParameters?branch='${branch}'${mailto}\&named_test=${architecture}${configoptions}"
  if [ ${silent} == "no" ]; then
      echo "${command}"
  fi

  bn=`ssh -S jenkins-proxy login.mcs.anl.gov curl -s https://jenkins-ci.mcs.anl.gov/job/petsc-branch/api/json | python -c 'import sys,json; print json.load(sys.stdin)["nextBuildNumber"]'`

  echo buildnumber=$bn
  ${command}
  buildurl=https://jenkins-ci.mcs.anl.gov/job/petsc-branch/
  echo buildpage=$buildurl$bn
  echo "for build status, visit above url or enter command:"
  echo $buildurl$bn/api/json?pretty=true
fi


# Close proxy connection
command="ssh -S jenkins-proxy -O exit ${url}"
if [ ${silent} == "no" ]; then
    echo "${command}"
    ${command}
else
    ${command} 2> /dev/null
fi
