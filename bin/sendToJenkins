#!/bin/bash
OPTIND=1
username=""
branch="next"
address="default"
architecture="linux-gcc-real"
configoptions=""
silent="no"

while getopts "h?a:b:m:o:su:" opt; do
  case "$opt" in
    h|\?)
      echo "sendToJenkins script"
      echo "Options: -h <help>"
      echo "         -a <architecture>                  -- default is 'linux-gcc-real'"
      echo "            eg, one of linux-gcc-real, osx-10.6, etc."
      echo "            Use 'short' for small subset:"
      echo "                linux-gcc-real"
      echo "                linux-osx-10.6"
      echo "                linux-gxx-complex"
      echo "                linux-dbg-quad"
      echo "            Use 'none' to ignore example configurations"
      echo "         -b <branch of PETSc to test>       -- default is 'next'"
      echo "         -m <address to mail to>            -- required."
      echo "            Use 'none' if no email desired"
      echo "         -o <configure options>             -- default is empty"
      echo '            Example: -o "--with-complex --with-precision=single" '
      echo "         -s                                 -- silent"
      echo "         -u <username on login.mcs.anl.gov> -- default is empty"
      exit 0
      ;;
    b)
     branch=$OPTARG
     ;;
    m)
     address=$OPTARG
     if [ ${address} == "none" ]; then
       mailto=""
     else
       mailto="\&mailto=${address}"
     fi
     ;;
    o)
     configoptions=${OPTARG}
     configoptions=${configoptions// /%20}
     configoptions=${configoptions//=/%3D}
     configoptions="\&configure_options=${configoptions}"
     ;;
    u)
     username=$OPTARG+'@'
     ;;
    a)
     architecture=$OPTARG
     ;;
    s)
     silent=yes
     ;;
  esac
done

if [ -z ${username} ]; then
  url=login.mcs.anl.gov
else
  url=${username}+login.mcs.anl.gov
fi;

if [ ${address} == "default" ]; then
  echo "Error: No email address give. Use -m <email> or -m none"
  exit 1
fi;

# set up connection through named proxy
command="ssh -M -S jenkins-proxy -fnNT ${url}"
if [ ${silent} == "no" ]; then
   echo ${command}
   ${command}
else
   ${command} 2> /dev/null
fi


if [ ${architecture} == "short" ]; then
  for arch in linux-gcc-real osx-10.6 linux-gxx-complex linux-dbg-quad; do
    command="ssh -S jenkins-proxy ${url} curl -s -X POST https://jenkins-ci.mcs.anl.gov/job/petsc-branch/buildWithParameters?branch=${branch}${mailto}\&named_test=${arch}${configoptions}"
    if [ ${silent} == "no" ]; then
	echo "${command}"
    fi
    ${command}
  done
else
  command="ssh -S jenkins-proxy ${url} curl -s -X POST https://jenkins-ci.mcs.anl.gov/job/petsc-branch/buildWithParameters?branch=${branch}${mailto}\&named_test=${architecture}${configoptions}"
  if [ ${silent} == "no" ]; then
      echo "${command}"
  fi
  ${command}
fi


# Close proxy connection
command="ssh -S jenkins-proxy -O exit ${url}"
if [ ${silent} == "no" ]; then
    echo "${command}"
    ${command}
else
    ${command} 2> /dev/null
fi
